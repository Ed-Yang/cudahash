//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29618528
// Cuda compilation tools, release 11.2, V11.2.152
// Based on NVVM 7.0.1
//

.version 7.2
.target sm_61
.address_size 64

	// .globl	_Z13ethash_searchP14Search_resultsm
.const .align 4 .u32 d_dag_size;
.const .align 8 .u64 d_dag;
.const .align 4 .u32 d_light_size;
.const .align 8 .u64 d_light;
.const .align 16 .b8 d_header[32];
.const .align 8 .u64 d_target;
.const .align 8 .b8 keccak_round_constants[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};

.visible .entry _Z13ethash_searchP14Search_resultsm(
	.param .u64 _Z13ethash_searchP14Search_resultsm_param_0,
	.param .u64 _Z13ethash_searchP14Search_resultsm_param_1
)
{
	.reg .pred 	%p<140>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<3598>;
	.reg .b64 	%rd<76>;


	ld.param.u64 	%rd7, [_Z13ethash_searchP14Search_resultsm_param_0];
	ld.param.u64 	%rd6, [_Z13ethash_searchP14Search_resultsm_param_1];
	cvta.to.global.u64 	%rd1, %rd7;
	ld.volatile.global.u32 	%r718, [%rd1+4];
	setp.ne.s32 	%p93, %r718, 0;
	@%p93 bra 	LBB0_38;

	mov.u32 	%r1138, %ctaid.x;
	mov.u32 	%r1139, %ntid.x;
	mov.u32 	%r1, %tid.x;
	mad.lo.s32 	%r2, %r1138, %r1139, %r1;
	cvt.u64.u32 	%rd9, %r2;
	add.s64 	%rd8, %rd9, %rd6;
	// begin inline asm
	mov.b64 {%r719,%r720},%rd8; 
	
	// end inline asm
	ld.const.v4.u32 	{%r1140, %r1141, %r1142, %r1143}, [d_header];
	mov.u32 	%r3472, 1;
	mov.u32 	%r856, 2;
	mov.u32 	%r928, 3;
	ld.const.v4.u32 	{%r1145, %r1146, %r1147, %r1148}, [d_header+16];
	xor.b32  	%r758, %r1140, 1;
	xor.b32  	%r743, %r1148, -2147483648;
	// begin inline asm
	shf.l.wrap.b32 %r721, %r1143, %r1142, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r725, %r1142, %r1143, %r3472;
	// end inline asm
	xor.b32  	%r926, %r719, %r721;
	xor.b32  	%r927, %r725, %r720;
	xor.b32  	%r972, %r1140, %r926;
	xor.b32  	%r975, %r1141, %r927;
	xor.b32  	%r879, %r926, 1;
	// begin inline asm
	shf.l.wrap.b32 %r729, %r1146, %r1145, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r733, %r1145, %r1146, %r3472;
	// end inline asm
	xor.b32  	%r910, %r729, %r758;
	xor.b32  	%r911, %r733, %r1141;
	xor.b32  	%r934, %r1142, %r910;
	xor.b32  	%r935, %r1143, %r911;
	// begin inline asm
	shf.l.wrap.b32 %r737, %r743, %r1147, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r741, %r1147, %r743, %r3472;
	// end inline asm
	xor.b32  	%r918, %r737, %r1142;
	xor.b32  	%r919, %r741, %r1143;
	xor.b32  	%r807, %r1145, %r918;
	xor.b32  	%r806, %r1146, %r919;
	// begin inline asm
	shf.l.wrap.b32 %r745, %r720, %r719, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r749, %r719, %r720, %r3472;
	// end inline asm
	xor.b32  	%r894, %r745, %r1145;
	xor.b32  	%r895, %r749, %r1146;
	xor.b32  	%r886, %r1147, %r894;
	xor.b32  	%r887, %r1148, %r895;
	xor.b32  	%r862, %r895, -2147483648;
	// begin inline asm
	shf.l.wrap.b32 %r753, %r1141, %r758, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r757, %r758, %r1141, %r3472;
	// end inline asm
	xor.b32  	%r846, %r753, %r1147;
	xor.b32  	%r847, %r757, %r743;
	xor.b32  	%r838, %r719, %r846;
	xor.b32  	%r839, %r720, %r847;
	mov.u32 	%r768, 44;
	// begin inline asm
	shf.l.wrap.b32 %r761, %r910, %r911, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r765, %r911, %r910, %r768;
	// end inline asm
	mov.u32 	%r776, 20;
	// begin inline asm
	shf.l.wrap.b32 %r769, %r847, %r846, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r773, %r846, %r847, %r776;
	// end inline asm
	mov.u32 	%r784, 61;
	// begin inline asm
	shf.l.wrap.b32 %r777, %r918, %r919, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r781, %r919, %r918, %r784;
	// end inline asm
	mov.u32 	%r792, 39;
	// begin inline asm
	shf.l.wrap.b32 %r785, %r846, %r847, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r789, %r847, %r846, %r792;
	// end inline asm
	mov.u32 	%r800, 18;
	// begin inline asm
	shf.l.wrap.b32 %r793, %r927, %r926, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r797, %r926, %r927, %r800;
	// end inline asm
	mov.u32 	%r808, 62;
	// begin inline asm
	shf.l.wrap.b32 %r801, %r807, %r806, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r805, %r806, %r807, %r808;
	// end inline asm
	mov.u32 	%r816, 43;
	// begin inline asm
	shf.l.wrap.b32 %r809, %r918, %r919, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r813, %r919, %r918, %r816;
	// end inline asm
	mov.u32 	%r824, 25;
	// begin inline asm
	shf.l.wrap.b32 %r817, %r895, %r894, %r824;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r821, %r894, %r895, %r824;
	// end inline asm
	mov.u32 	%r1150, 25923;
	prmt.b32 	%r1043, %r847, %r846, %r1150;
	mov.u32 	%r1151, 8455;
	prmt.b32 	%r1046, %r847, %r846, %r1151;
	mov.u32 	%r1152, 1893;
	prmt.b32 	%r1091, %r895, %r894, %r1152;
	mov.u32 	%r1153, 17185;
	prmt.b32 	%r1094, %r895, %r894, %r1153;
	mov.u32 	%r832, 41;
	// begin inline asm
	shf.l.wrap.b32 %r825, %r926, %r927, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r829, %r927, %r926, %r832;
	// end inline asm
	mov.u32 	%r840, 27;
	// begin inline asm
	shf.l.wrap.b32 %r833, %r839, %r838, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r837, %r838, %r839, %r840;
	// end inline asm
	mov.u32 	%r848, 14;
	// begin inline asm
	shf.l.wrap.b32 %r841, %r847, %r846, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r845, %r846, %r847, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r849, %r911, %r910, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r853, %r910, %r911, %r856;
	// end inline asm
	mov.u32 	%r864, 55;
	// begin inline asm
	shf.l.wrap.b32 %r857, %r894, %r862, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r861, %r862, %r894, %r864;
	// end inline asm
	mov.u32 	%r872, 45;
	// begin inline asm
	shf.l.wrap.b32 %r865, %r910, %r911, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r869, %r911, %r910, %r872;
	// end inline asm
	mov.u32 	%r880, 36;
	// begin inline asm
	shf.l.wrap.b32 %r873, %r879, %r927, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r877, %r927, %r879, %r880;
	// end inline asm
	mov.u32 	%r888, 28;
	// begin inline asm
	shf.l.wrap.b32 %r881, %r887, %r886, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r885, %r886, %r887, %r888;
	// end inline asm
	mov.u32 	%r896, 21;
	// begin inline asm
	shf.l.wrap.b32 %r889, %r895, %r894, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r893, %r894, %r895, %r896;
	// end inline asm
	mov.u32 	%r904, 15;
	// begin inline asm
	shf.l.wrap.b32 %r897, %r919, %r918, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r901, %r918, %r919, %r904;
	// end inline asm
	mov.u32 	%r912, 10;
	// begin inline asm
	shf.l.wrap.b32 %r905, %r911, %r910, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r909, %r910, %r911, %r912;
	// end inline asm
	mov.u32 	%r920, 6;
	// begin inline asm
	shf.l.wrap.b32 %r913, %r919, %r918, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r917, %r918, %r919, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r921, %r927, %r926, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r925, %r926, %r927, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r929, %r935, %r934, %r3472;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r933, %r934, %r935, %r3472;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r937, %r972, %r761, %r809, 0xD2;
	lop3.b32 %r3471, %r975, %r765, %r813, 0xD2;
	// end inline asm
	xor.b32  	%r3470, %r937, 1;
	// begin inline asm
	// chi
	lop3.b32 %r3460, %r761, %r809, %r889, 0xD2;
	lop3.b32 %r3461, %r765, %r813, %r893, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3450, %r809, %r889, %r841, 0xD2;
	lop3.b32 %r3451, %r813, %r893, %r845, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3440, %r889, %r841, %r972, 0xD2;
	lop3.b32 %r3441, %r893, %r845, %r975, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3430, %r841, %r972, %r761, 0xD2;
	lop3.b32 %r3431, %r845, %r975, %r765, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3468, %r881, %r769, %r921, 0xD2;
	lop3.b32 %r3469, %r885, %r773, %r925, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3458, %r769, %r921, %r865, 0xD2;
	lop3.b32 %r3459, %r773, %r925, %r869, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3448, %r921, %r865, %r777, 0xD2;
	lop3.b32 %r3449, %r925, %r869, %r781, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3438, %r865, %r777, %r881, 0xD2;
	lop3.b32 %r3439, %r869, %r781, %r885, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3428, %r777, %r881, %r769, 0xD2;
	lop3.b32 %r3429, %r781, %r885, %r773, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3466, %r929, %r913, %r817, 0xD2;
	lop3.b32 %r3467, %r933, %r917, %r821, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3524, %r913, %r817, %r1043, 0xD2;
	lop3.b32 %r3523, %r917, %r821, %r1046, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3446, %r817, %r1043, %r793, 0xD2;
	lop3.b32 %r3447, %r821, %r1046, %r797, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3436, %r1043, %r793, %r929, 0xD2;
	lop3.b32 %r3437, %r1046, %r797, %r933, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3426, %r793, %r929, %r913, 0xD2;
	lop3.b32 %r3427, %r797, %r933, %r917, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3464, %r833, %r873, %r905, 0xD2;
	lop3.b32 %r3465, %r837, %r877, %r909, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3454, %r873, %r905, %r897, 0xD2;
	lop3.b32 %r3455, %r877, %r909, %r901, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3444, %r905, %r897, %r1091, 0xD2;
	lop3.b32 %r3445, %r909, %r901, %r1094, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3434, %r897, %r1091, %r833, 0xD2;
	lop3.b32 %r3435, %r901, %r1094, %r837, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3424, %r1091, %r833, %r873, 0xD2;
	lop3.b32 %r3425, %r1094, %r837, %r877, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3462, %r801, %r857, %r785, 0xD2;
	lop3.b32 %r3463, %r805, %r861, %r789, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3452, %r857, %r785, %r825, 0xD2;
	lop3.b32 %r3453, %r861, %r789, %r829, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3442, %r785, %r825, %r849, 0xD2;
	lop3.b32 %r3443, %r789, %r829, %r853, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3432, %r825, %r849, %r801, 0xD2;
	lop3.b32 %r3433, %r829, %r853, %r805, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3422, %r849, %r801, %r857, 0xD2;
	lop3.b32 %r3423, %r853, %r805, %r861, 0xD2;
	// end inline asm
	mov.u64 	%rd11, keccak_round_constants;
	bra.uni 	LBB0_2;

LBB0_3:
	// begin inline asm
	// xor5
	lop3.b32 %r1154, %r3470, %r3468, %r3466, 0x96;
	lop3.b32 %r1154, %r1154, %r3464, %r3462, 0x96;
	lop3.b32 %r1155, %r3471, %r3469, %r3467, 0x96;
	lop3.b32 %r1155, %r1155, %r3465, %r3463, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1166, %r3460, %r3458, %r3524, 0x96;
	lop3.b32 %r1166, %r1166, %r3454, %r3452, 0x96;
	lop3.b32 %r1167, %r3461, %r3459, %r3523, 0x96;
	lop3.b32 %r1167, %r1167, %r3455, %r3453, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1178, %r3450, %r3448, %r3446, 0x96;
	lop3.b32 %r1178, %r1178, %r3444, %r3442, 0x96;
	lop3.b32 %r1179, %r3451, %r3449, %r3447, 0x96;
	lop3.b32 %r1179, %r1179, %r3445, %r3443, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1190, %r3440, %r3438, %r3436, 0x96;
	lop3.b32 %r1190, %r1190, %r3434, %r3432, 0x96;
	lop3.b32 %r1191, %r3441, %r3439, %r3437, 0x96;
	lop3.b32 %r1191, %r1191, %r3435, %r3433, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1202, %r3430, %r3428, %r3426, 0x96;
	lop3.b32 %r1202, %r1202, %r3424, %r3422, 0x96;
	lop3.b32 %r1203, %r3431, %r3429, %r3427, 0x96;
	lop3.b32 %r1203, %r1203, %r3425, %r3423, 0x96;
	// end inline asm
	mov.u32 	%r1429, 1;
	// begin inline asm
	shf.l.wrap.b32 %r1214, %r1167, %r1166, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1218, %r1166, %r1167, %r1429;
	// end inline asm
	xor.b32  	%r1630, %r1202, %r1214;
	xor.b32  	%r1631, %r1218, %r1203;
	xor.b32  	%r1465, %r3470, %r1630;
	xor.b32  	%r1468, %r3471, %r1631;
	xor.b32  	%r1372, %r3468, %r1630;
	xor.b32  	%r1371, %r3469, %r1631;
	xor.b32  	%r1419, %r3466, %r1630;
	xor.b32  	%r1420, %r3467, %r1631;
	xor.b32  	%r1324, %r3464, %r1630;
	xor.b32  	%r1323, %r3465, %r1631;
	xor.b32  	%r1291, %r3462, %r1630;
	xor.b32  	%r1292, %r3463, %r1631;
	// begin inline asm
	shf.l.wrap.b32 %r1222, %r1179, %r1178, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1226, %r1178, %r1179, %r1429;
	// end inline asm
	xor.b32  	%r1632, %r1222, %r1154;
	xor.b32  	%r1633, %r1226, %r1155;
	xor.b32  	%r1427, %r3460, %r1632;
	xor.b32  	%r1428, %r3461, %r1633;
	xor.b32  	%r1260, %r3458, %r1632;
	xor.b32  	%r1259, %r3459, %r1633;
	xor.b32  	%r1403, %r3524, %r1632;
	xor.b32  	%r1404, %r3523, %r1633;
	xor.b32  	%r1364, %r3454, %r1632;
	xor.b32  	%r1363, %r3455, %r1633;
	xor.b32  	%r1347, %r3452, %r1632;
	xor.b32  	%r1348, %r3453, %r1633;
	// begin inline asm
	shf.l.wrap.b32 %r1230, %r1191, %r1190, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1234, %r1190, %r1191, %r1429;
	// end inline asm
	xor.b32  	%r1634, %r1230, %r1166;
	xor.b32  	%r1635, %r1234, %r1167;
	xor.b32  	%r1300, %r3450, %r1634;
	xor.b32  	%r1299, %r3451, %r1635;
	xor.b32  	%r1411, %r3448, %r1634;
	xor.b32  	%r1412, %r3449, %r1635;
	xor.b32  	%r1308, %r3446, %r1634;
	xor.b32  	%r1307, %r3447, %r1635;
	xor.b32  	%r1395, %r3444, %r1634;
	xor.b32  	%r1396, %r3445, %r1635;
	xor.b32  	%r1276, %r3442, %r1634;
	xor.b32  	%r1275, %r3443, %r1635;
	// begin inline asm
	shf.l.wrap.b32 %r1238, %r1203, %r1202, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1242, %r1202, %r1203, %r1429;
	// end inline asm
	xor.b32  	%r1636, %r1238, %r1178;
	xor.b32  	%r1637, %r1242, %r1179;
	xor.b32  	%r1379, %r3440, %r1636;
	xor.b32  	%r1380, %r3441, %r1637;
	xor.b32  	%r1356, %r3438, %r1636;
	xor.b32  	%r1355, %r3439, %r1637;
	xor.b32  	%r1315, %r3436, %r1636;
	xor.b32  	%r1316, %r3437, %r1637;
	xor.b32  	%r1387, %r3434, %r1636;
	xor.b32  	%r1388, %r3435, %r1637;
	xor.b32  	%r1638, %r3432, %r1636;
	xor.b32  	%r1639, %r3433, %r1637;
	// begin inline asm
	shf.l.wrap.b32 %r1246, %r1155, %r1154, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1250, %r1154, %r1155, %r1429;
	// end inline asm
	xor.b32  	%r1640, %r1246, %r1190;
	xor.b32  	%r1641, %r1250, %r1191;
	xor.b32  	%r1331, %r3430, %r1640;
	xor.b32  	%r1332, %r3431, %r1641;
	xor.b32  	%r1267, %r3428, %r1640;
	xor.b32  	%r1268, %r3429, %r1641;
	xor.b32  	%r1284, %r3426, %r1640;
	xor.b32  	%r1283, %r3427, %r1641;
	xor.b32  	%r1642, %r3424, %r1640;
	xor.b32  	%r1643, %r3425, %r1641;
	xor.b32  	%r1339, %r3422, %r1640;
	xor.b32  	%r1340, %r3423, %r1641;
	// begin inline asm
	shf.l.wrap.b32 %r1254, %r1260, %r1259, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1258, %r1259, %r1260, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1262, %r1268, %r1267, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1266, %r1267, %r1268, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1270, %r1276, %r1275, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1274, %r1275, %r1276, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1278, %r1284, %r1283, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1282, %r1283, %r1284, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1286, %r1292, %r1291, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1290, %r1291, %r1292, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1294, %r1300, %r1299, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1298, %r1299, %r1300, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1302, %r1308, %r1307, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1306, %r1307, %r1308, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1310, %r1316, %r1315, %r824;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1314, %r1315, %r1316, %r824;
	// end inline asm
	prmt.b32 	%r1536, %r1643, %r1642, %r1150;
	prmt.b32 	%r1539, %r1643, %r1642, %r1151;
	prmt.b32 	%r1584, %r1639, %r1638, %r1152;
	prmt.b32 	%r1587, %r1639, %r1638, %r1153;
	// begin inline asm
	shf.l.wrap.b32 %r1318, %r1324, %r1323, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1322, %r1323, %r1324, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1326, %r1332, %r1331, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1330, %r1331, %r1332, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1334, %r1340, %r1339, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1338, %r1339, %r1340, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1342, %r1348, %r1347, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1346, %r1347, %r1348, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1350, %r1356, %r1355, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1354, %r1355, %r1356, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1358, %r1364, %r1363, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1362, %r1363, %r1364, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1366, %r1372, %r1371, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1370, %r1371, %r1372, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1374, %r1380, %r1379, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1378, %r1379, %r1380, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1382, %r1388, %r1387, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1386, %r1387, %r1388, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1390, %r1396, %r1395, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1394, %r1395, %r1396, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1398, %r1404, %r1403, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1402, %r1403, %r1404, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1406, %r1412, %r1411, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1410, %r1411, %r1412, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1414, %r1420, %r1419, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1418, %r1419, %r1420, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1422, %r1428, %r1427, %r1429;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1426, %r1427, %r1428, %r1429;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1430, %r1465, %r1254, %r1302, 0xD2;
	lop3.b32 %r1431, %r1468, %r1258, %r1306, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3460, %r1254, %r1302, %r1382, 0xD2;
	lop3.b32 %r3461, %r1258, %r1306, %r1386, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3450, %r1302, %r1382, %r1334, 0xD2;
	lop3.b32 %r3451, %r1306, %r1386, %r1338, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3440, %r1382, %r1334, %r1465, 0xD2;
	lop3.b32 %r3441, %r1386, %r1338, %r1468, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3430, %r1334, %r1465, %r1254, 0xD2;
	lop3.b32 %r3431, %r1338, %r1468, %r1258, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3468, %r1374, %r1262, %r1414, 0xD2;
	lop3.b32 %r3469, %r1378, %r1266, %r1418, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3458, %r1262, %r1414, %r1358, 0xD2;
	lop3.b32 %r3459, %r1266, %r1418, %r1362, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3448, %r1414, %r1358, %r1270, 0xD2;
	lop3.b32 %r3449, %r1418, %r1362, %r1274, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3438, %r1358, %r1270, %r1374, 0xD2;
	lop3.b32 %r3439, %r1362, %r1274, %r1378, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3428, %r1270, %r1374, %r1262, 0xD2;
	lop3.b32 %r3429, %r1274, %r1378, %r1266, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3466, %r1422, %r1406, %r1310, 0xD2;
	lop3.b32 %r3467, %r1426, %r1410, %r1314, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3524, %r1406, %r1310, %r1536, 0xD2;
	lop3.b32 %r3523, %r1410, %r1314, %r1539, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3446, %r1310, %r1536, %r1286, 0xD2;
	lop3.b32 %r3447, %r1314, %r1539, %r1290, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3436, %r1536, %r1286, %r1422, 0xD2;
	lop3.b32 %r3437, %r1539, %r1290, %r1426, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3426, %r1286, %r1422, %r1406, 0xD2;
	lop3.b32 %r3427, %r1290, %r1426, %r1410, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3464, %r1326, %r1366, %r1398, 0xD2;
	lop3.b32 %r3465, %r1330, %r1370, %r1402, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3454, %r1366, %r1398, %r1390, 0xD2;
	lop3.b32 %r3455, %r1370, %r1402, %r1394, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3444, %r1398, %r1390, %r1584, 0xD2;
	lop3.b32 %r3445, %r1402, %r1394, %r1587, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3434, %r1390, %r1584, %r1326, 0xD2;
	lop3.b32 %r3435, %r1394, %r1587, %r1330, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3424, %r1584, %r1326, %r1366, 0xD2;
	lop3.b32 %r3425, %r1587, %r1330, %r1370, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3462, %r1294, %r1350, %r1278, 0xD2;
	lop3.b32 %r3463, %r1298, %r1354, %r1282, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3452, %r1350, %r1278, %r1318, 0xD2;
	lop3.b32 %r3453, %r1354, %r1282, %r1322, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3442, %r1278, %r1318, %r1342, 0xD2;
	lop3.b32 %r3443, %r1282, %r1322, %r1346, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3432, %r1318, %r1342, %r1294, 0xD2;
	lop3.b32 %r3433, %r1322, %r1346, %r1298, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3422, %r1342, %r1294, %r1350, 0xD2;
	lop3.b32 %r3423, %r1346, %r1298, %r1354, 0xD2;
	// end inline asm
	mul.wide.u32 	%rd10, %r3472, 8;
	add.s64 	%rd12, %rd11, %rd10;
	ld.const.v2.u32 	{%r1648, %r1649}, [%rd12];
	xor.b32  	%r3471, %r1431, %r1649;
	xor.b32  	%r3470, %r1430, %r1648;
	add.s32 	%r3472, %r3472, 1;

LBB0_2:
	setp.eq.s32 	%p94, %r3472, 23;
	@%p94 bra 	LBB0_4;
	bra.uni 	LBB0_3;

LBB0_4:
	// begin inline asm
	// xor5
	lop3.b32 %r1652, %r3470, %r3468, %r3466, 0x96;
	lop3.b32 %r1652, %r1652, %r3464, %r3462, 0x96;
	lop3.b32 %r1653, %r3471, %r3469, %r3467, 0x96;
	lop3.b32 %r1653, %r1653, %r3465, %r3463, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1664, %r3460, %r3458, %r3524, 0x96;
	lop3.b32 %r1664, %r1664, %r3454, %r3452, 0x96;
	lop3.b32 %r1665, %r3461, %r3459, %r3523, 0x96;
	lop3.b32 %r1665, %r1665, %r3455, %r3453, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1676, %r3450, %r3448, %r3446, 0x96;
	lop3.b32 %r1676, %r1676, %r3444, %r3442, 0x96;
	lop3.b32 %r1677, %r3451, %r3449, %r3447, 0x96;
	lop3.b32 %r1677, %r1677, %r3445, %r3443, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1688, %r3440, %r3438, %r3436, 0x96;
	lop3.b32 %r1688, %r1688, %r3434, %r3432, 0x96;
	lop3.b32 %r1689, %r3441, %r3439, %r3437, 0x96;
	lop3.b32 %r1689, %r1689, %r3435, %r3433, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1700, %r3430, %r3428, %r3426, 0x96;
	lop3.b32 %r1700, %r1700, %r3424, %r3422, 0x96;
	lop3.b32 %r1701, %r3431, %r3429, %r3427, 0x96;
	lop3.b32 %r1701, %r1701, %r3425, %r3423, 0x96;
	// end inline asm
	mov.u32 	%r1751, 1;
	// begin inline asm
	shf.l.wrap.b32 %r1712, %r1665, %r1664, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1716, %r1664, %r1665, %r1751;
	// end inline asm
	xor.b32  	%r1889, %r1700, %r1712;
	xor.b32  	%r1890, %r1716, %r1701;
	xor.b32  	%r1859, %r3470, %r1889;
	xor.b32  	%r1862, %r3471, %r1890;
	xor.b32  	%r3526, %r3466, %r1889;
	xor.b32  	%r3525, %r3467, %r1890;
	// begin inline asm
	shf.l.wrap.b32 %r1720, %r1677, %r1676, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1724, %r1676, %r1677, %r1751;
	// end inline asm
	xor.b32  	%r1891, %r1720, %r1652;
	xor.b32  	%r1892, %r1724, %r1653;
	xor.b32  	%r1758, %r3458, %r1891;
	xor.b32  	%r1757, %r3459, %r1892;
	xor.b32  	%r1798, %r3454, %r1891;
	xor.b32  	%r1797, %r3455, %r1892;
	// begin inline asm
	shf.l.wrap.b32 %r1728, %r1689, %r1688, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1732, %r1688, %r1689, %r1751;
	// end inline asm
	xor.b32  	%r1893, %r1728, %r1664;
	xor.b32  	%r1894, %r1732, %r1665;
	xor.b32  	%r1782, %r3446, %r1893;
	xor.b32  	%r1781, %r3447, %r1894;
	xor.b32  	%r1774, %r3442, %r1893;
	xor.b32  	%r1773, %r3443, %r1894;
	// begin inline asm
	shf.l.wrap.b32 %r1736, %r1701, %r1700, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1740, %r1700, %r1701, %r1751;
	// end inline asm
	xor.b32  	%r1895, %r1736, %r1676;
	xor.b32  	%r1896, %r1740, %r1677;
	xor.b32  	%r1805, %r3440, %r1895;
	xor.b32  	%r1806, %r3441, %r1896;
	xor.b32  	%r1813, %r3434, %r1895;
	xor.b32  	%r1814, %r3435, %r1896;
	// begin inline asm
	shf.l.wrap.b32 %r1744, %r1653, %r1652, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1748, %r1652, %r1653, %r1751;
	// end inline asm
	xor.b32  	%r1897, %r1744, %r1688;
	xor.b32  	%r1898, %r1748, %r1689;
	xor.b32  	%r1765, %r3428, %r1897;
	xor.b32  	%r1766, %r3429, %r1898;
	xor.b32  	%r1789, %r3422, %r1897;
	xor.b32  	%r1790, %r3423, %r1898;
	// begin inline asm
	shf.l.wrap.b32 %r1752, %r1758, %r1757, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1756, %r1757, %r1758, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1760, %r1766, %r1765, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1764, %r1765, %r1766, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3528, %r1774, %r1773, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3527, %r1773, %r1774, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1776, %r1782, %r1781, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1780, %r1781, %r1782, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1784, %r1790, %r1789, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1788, %r1789, %r1790, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3530, %r1798, %r1797, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3529, %r1797, %r1798, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1800, %r1806, %r1805, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1804, %r1805, %r1806, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1808, %r1814, %r1813, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1812, %r1813, %r1814, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1816, %r3525, %r3526, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1820, %r3526, %r3525, %r928;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1824, %r1859, %r1752, %r1776, 0xD2;
	lop3.b32 %r1825, %r1862, %r1756, %r1780, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1832, %r1752, %r1776, %r1808, 0xD2;
	lop3.b32 %r1833, %r1756, %r1780, %r1812, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1840, %r1776, %r1808, %r1784, 0xD2;
	lop3.b32 %r1841, %r1780, %r1812, %r1788, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1848, %r1808, %r1784, %r1859, 0xD2;
	lop3.b32 %r1849, %r1812, %r1788, %r1862, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1856, %r1784, %r1859, %r1752, 0xD2;
	lop3.b32 %r1857, %r1788, %r1862, %r1756, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1864, %r1800, %r1760, %r1816, 0xD2;
	lop3.b32 %r1865, %r1804, %r1764, %r1820, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1872, %r1760, %r1816, %r3530, 0xD2;
	lop3.b32 %r1873, %r1764, %r1820, %r3529, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r1880, %r1816, %r3530, %r3528, 0xD2;
	lop3.b32 %r1881, %r1820, %r3529, %r3527, 0xD2;
	// end inline asm
	xor.b32  	%r225, %r1824, -2147450872;
	xor.b32  	%r226, %r1825, -2147483648;
	cvt.u16.u32 	%rs2, %r1;
	and.b16  	%rs1, %rs2, 3;
	ld.const.u64 	%rd13, [d_dag];
	cvta.to.global.u64 	%rd2, %rd13;
	and.b32  	%r1899, %r1, 7;
	cvt.u64.u32 	%rd3, %r1899;
	mov.u32 	%r3481, 0;
	setp.eq.s16 	%p96, %rs1, 1;
	shl.b64 	%rd16, %rd3, 4;

LBB0_5:
	mov.u32 	%r1900, 6175;
	mov.u32 	%r1901, -1;
	shfl.sync.idx.b32 	%r237|%p95, %r225, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r238|%p1, %r226, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r239|%p2, %r1832, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r240|%p3, %r1833, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r3485|%p4, %r1840, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r3484|%p5, %r1841, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r3483|%p6, %r1848, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r3482|%p7, %r1849, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r245|%p8, %r1856, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r246|%p9, %r1857, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r247|%p10, %r1864, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r248|%p11, %r1865, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r249|%p12, %r1872, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r250|%p13, %r1873, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r251|%p14, %r1880, %r3481, %r1900, %r1901;
	shfl.sync.idx.b32 	%r252|%p15, %r1881, %r3481, %r1900, %r1901;
	@%p96 bra 	LBB0_9;

	setp.eq.s16 	%p97, %rs1, 2;
	mov.u32 	%r3482, %r248;
	mov.u32 	%r3483, %r247;
	mov.u32 	%r3484, %r246;
	mov.u32 	%r3485, %r245;
	@%p97 bra 	LBB0_9;

	setp.ne.s16 	%p98, %rs1, 3;
	mov.u32 	%r3482, %r252;
	mov.u32 	%r3483, %r251;
	mov.u32 	%r3484, %r250;
	mov.u32 	%r3485, %r249;
	@%p98 bra 	LBB0_8;
	bra.uni 	LBB0_9;

LBB0_8:
	mov.u32 	%r3482, %r240;
	mov.u32 	%r3483, %r239;
	mov.u32 	%r3484, %r238;
	mov.u32 	%r3485, %r237;

LBB0_9:
	mov.u32 	%r3412, 6175;
	mov.u32 	%r3411, -1;
	mov.u32 	%r3514, 0;
	shfl.sync.idx.b32 	%r272|%p99, %r237, %r3514, %r3412, %r3411;
	add.s32 	%r273, %r3481, 1;
	shfl.sync.idx.b32 	%r274|%p100, %r225, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r275|%p16, %r226, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r276|%p17, %r1832, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r277|%p18, %r1833, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r3489|%p19, %r1840, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r3488|%p20, %r1841, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r3487|%p21, %r1848, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r3486|%p22, %r1849, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r282|%p23, %r1856, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r283|%p24, %r1857, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r284|%p25, %r1864, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r285|%p26, %r1865, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r286|%p27, %r1872, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r287|%p28, %r1873, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r288|%p29, %r1880, %r273, %r3412, %r3411;
	shfl.sync.idx.b32 	%r289|%p30, %r1881, %r273, %r3412, %r3411;
	@%p96 bra 	LBB0_13;

	setp.eq.s16 	%p102, %rs1, 2;
	mov.u32 	%r3486, %r285;
	mov.u32 	%r3487, %r284;
	mov.u32 	%r3488, %r283;
	mov.u32 	%r3489, %r282;
	@%p102 bra 	LBB0_13;

	setp.ne.s16 	%p103, %rs1, 3;
	mov.u32 	%r3486, %r289;
	mov.u32 	%r3487, %r288;
	mov.u32 	%r3488, %r287;
	mov.u32 	%r3489, %r286;
	@%p103 bra 	LBB0_12;
	bra.uni 	LBB0_13;

LBB0_12:
	mov.u32 	%r3486, %r277;
	mov.u32 	%r3487, %r276;
	mov.u32 	%r3488, %r275;
	mov.u32 	%r3489, %r274;

LBB0_13:
	mov.u32 	%r3414, 6175;
	mov.u32 	%r3413, -1;
	shfl.sync.idx.b32 	%r309|%p104, %r274, %r3514, %r3414, %r3413;
	add.s32 	%r310, %r3481, 2;
	shfl.sync.idx.b32 	%r311|%p105, %r225, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r312|%p31, %r226, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r313|%p32, %r1832, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r314|%p33, %r1833, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r3493|%p34, %r1840, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r3492|%p35, %r1841, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r3491|%p36, %r1848, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r3490|%p37, %r1849, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r319|%p38, %r1856, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r320|%p39, %r1857, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r321|%p40, %r1864, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r322|%p41, %r1865, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r323|%p42, %r1872, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r324|%p43, %r1873, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r325|%p44, %r1880, %r310, %r3414, %r3413;
	shfl.sync.idx.b32 	%r326|%p45, %r1881, %r310, %r3414, %r3413;
	@%p96 bra 	LBB0_17;

	setp.eq.s16 	%p107, %rs1, 2;
	mov.u32 	%r3490, %r322;
	mov.u32 	%r3491, %r321;
	mov.u32 	%r3492, %r320;
	mov.u32 	%r3493, %r319;
	@%p107 bra 	LBB0_17;

	setp.ne.s16 	%p108, %rs1, 3;
	mov.u32 	%r3490, %r326;
	mov.u32 	%r3491, %r325;
	mov.u32 	%r3492, %r324;
	mov.u32 	%r3493, %r323;
	@%p108 bra 	LBB0_16;
	bra.uni 	LBB0_17;

LBB0_16:
	mov.u32 	%r3490, %r314;
	mov.u32 	%r3491, %r313;
	mov.u32 	%r3492, %r312;
	mov.u32 	%r3493, %r311;

LBB0_17:
	mov.u32 	%r3416, 6175;
	mov.u32 	%r3415, -1;
	shfl.sync.idx.b32 	%r346|%p109, %r311, %r3514, %r3416, %r3415;
	add.s32 	%r347, %r3481, 3;
	shfl.sync.idx.b32 	%r348|%p110, %r225, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r349|%p46, %r226, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r350|%p47, %r1832, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r351|%p48, %r1833, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r3497|%p49, %r1840, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r3496|%p50, %r1841, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r3495|%p51, %r1848, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r3494|%p52, %r1849, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r356|%p53, %r1856, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r357|%p54, %r1857, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r358|%p55, %r1864, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r359|%p56, %r1865, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r360|%p57, %r1872, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r361|%p58, %r1873, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r362|%p59, %r1880, %r347, %r3416, %r3415;
	shfl.sync.idx.b32 	%r363|%p60, %r1881, %r347, %r3416, %r3415;
	@%p96 bra 	LBB0_21;

	setp.eq.s16 	%p112, %rs1, 2;
	mov.u32 	%r3494, %r359;
	mov.u32 	%r3495, %r358;
	mov.u32 	%r3496, %r357;
	mov.u32 	%r3497, %r356;
	@%p112 bra 	LBB0_21;

	setp.ne.s16 	%p113, %rs1, 3;
	mov.u32 	%r3494, %r363;
	mov.u32 	%r3495, %r362;
	mov.u32 	%r3496, %r361;
	mov.u32 	%r3497, %r360;
	@%p113 bra 	LBB0_20;
	bra.uni 	LBB0_21;

LBB0_20:
	mov.u32 	%r3494, %r351;
	mov.u32 	%r3495, %r350;
	mov.u32 	%r3496, %r349;
	mov.u32 	%r3497, %r348;

LBB0_21:
	mov.u32 	%r3418, 6175;
	mov.u32 	%r3417, -1;
	shfl.sync.idx.b32 	%r383|%p114, %r348, %r3514, %r3418, %r3417;

LBB0_22:
	ld.const.u32 	%r3421, [d_dag_size];
	mov.u32 	%r3420, 6175;
	mov.u32 	%r3419, -1;
	// begin inline asm
	bfe.u32 %r1914, %r3514, %r856, %r928;
	// end inline asm
	xor.b32  	%r1918, %r272, %r3514;
	mul.lo.s32 	%r1919, %r1918, 16777619;
	xor.b32  	%r1920, %r1919, %r3485;
	rem.u32 	%r1921, %r1920, %r3421;
	shfl.sync.idx.b32 	%r1924|%p115, %r1921, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd14, %r1924, 128;
	add.s64 	%rd15, %rd2, %rd14;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.v4.u32 	{%r1925, %r1926, %r1927, %r1928}, [%rd17];
	mul.lo.s32 	%r1933, %r3485, 16777619;
	xor.b32  	%r1934, %r1925, %r1933;
	mul.lo.s32 	%r1935, %r3484, 16777619;
	xor.b32  	%r1936, %r1926, %r1935;
	mul.lo.s32 	%r1937, %r3483, 16777619;
	xor.b32  	%r1938, %r1927, %r1937;
	mul.lo.s32 	%r1939, %r3482, 16777619;
	xor.b32  	%r1940, %r1928, %r1939;
	xor.b32  	%r1941, %r309, %r3514;
	mul.lo.s32 	%r1942, %r1941, 16777619;
	xor.b32  	%r1943, %r1942, %r3489;
	rem.u32 	%r1944, %r1943, %r3421;
	shfl.sync.idx.b32 	%r1945|%p116, %r1944, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd18, %r1945, 128;
	add.s64 	%rd19, %rd2, %rd18;
	add.s64 	%rd20, %rd19, %rd16;
	ld.global.v4.u32 	{%r1946, %r1947, %r1948, %r1949}, [%rd20];
	mul.lo.s32 	%r1954, %r3489, 16777619;
	xor.b32  	%r1955, %r1946, %r1954;
	mul.lo.s32 	%r1956, %r3488, 16777619;
	xor.b32  	%r1957, %r1947, %r1956;
	mul.lo.s32 	%r1958, %r3487, 16777619;
	xor.b32  	%r1959, %r1948, %r1958;
	mul.lo.s32 	%r1960, %r3486, 16777619;
	xor.b32  	%r1961, %r1949, %r1960;
	xor.b32  	%r1962, %r346, %r3514;
	mul.lo.s32 	%r1963, %r1962, 16777619;
	xor.b32  	%r1964, %r1963, %r3493;
	rem.u32 	%r1965, %r1964, %r3421;
	shfl.sync.idx.b32 	%r1966|%p117, %r1965, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd21, %r1966, 128;
	add.s64 	%rd22, %rd2, %rd21;
	add.s64 	%rd23, %rd22, %rd16;
	ld.global.v4.u32 	{%r1967, %r1968, %r1969, %r1970}, [%rd23];
	mul.lo.s32 	%r1975, %r3493, 16777619;
	xor.b32  	%r1976, %r1967, %r1975;
	mul.lo.s32 	%r1977, %r3492, 16777619;
	xor.b32  	%r1978, %r1968, %r1977;
	mul.lo.s32 	%r1979, %r3491, 16777619;
	xor.b32  	%r1980, %r1969, %r1979;
	mul.lo.s32 	%r1981, %r3490, 16777619;
	xor.b32  	%r1982, %r1970, %r1981;
	xor.b32  	%r1983, %r383, %r3514;
	mul.lo.s32 	%r1984, %r1983, 16777619;
	xor.b32  	%r1985, %r1984, %r3497;
	rem.u32 	%r1986, %r1985, %r3421;
	shfl.sync.idx.b32 	%r1987|%p118, %r1986, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd24, %r1987, 128;
	add.s64 	%rd25, %rd2, %rd24;
	add.s64 	%rd26, %rd25, %rd16;
	ld.global.v4.u32 	{%r1988, %r1989, %r1990, %r1991}, [%rd26];
	mul.lo.s32 	%r1996, %r3497, 16777619;
	xor.b32  	%r1997, %r1988, %r1996;
	mul.lo.s32 	%r1998, %r3496, 16777619;
	xor.b32  	%r1999, %r1989, %r1998;
	mul.lo.s32 	%r2000, %r3495, 16777619;
	xor.b32  	%r2001, %r1990, %r2000;
	mul.lo.s32 	%r2002, %r3494, 16777619;
	xor.b32  	%r2003, %r1991, %r2002;
	add.s32 	%r2004, %r3514, 1;
	xor.b32  	%r2005, %r272, %r2004;
	mul.lo.s32 	%r2006, %r2005, 16777619;
	xor.b32  	%r2007, %r2006, %r1936;
	rem.u32 	%r2008, %r2007, %r3421;
	shfl.sync.idx.b32 	%r2009|%p119, %r2008, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd27, %r2009, 128;
	add.s64 	%rd28, %rd2, %rd27;
	add.s64 	%rd29, %rd28, %rd16;
	ld.global.v4.u32 	{%r2010, %r2011, %r2012, %r2013}, [%rd29];
	mul.lo.s32 	%r2018, %r1934, 16777619;
	xor.b32  	%r2019, %r2010, %r2018;
	mul.lo.s32 	%r2020, %r1936, 16777619;
	xor.b32  	%r2021, %r2011, %r2020;
	mul.lo.s32 	%r2022, %r1938, 16777619;
	xor.b32  	%r2023, %r2012, %r2022;
	mul.lo.s32 	%r2024, %r1940, 16777619;
	xor.b32  	%r2025, %r2013, %r2024;
	xor.b32  	%r2026, %r309, %r2004;
	mul.lo.s32 	%r2027, %r2026, 16777619;
	xor.b32  	%r2028, %r2027, %r1957;
	rem.u32 	%r2029, %r2028, %r3421;
	shfl.sync.idx.b32 	%r2030|%p120, %r2029, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd30, %r2030, 128;
	add.s64 	%rd31, %rd2, %rd30;
	add.s64 	%rd32, %rd31, %rd16;
	ld.global.v4.u32 	{%r2031, %r2032, %r2033, %r2034}, [%rd32];
	mul.lo.s32 	%r2039, %r1955, 16777619;
	xor.b32  	%r2040, %r2031, %r2039;
	mul.lo.s32 	%r2041, %r1957, 16777619;
	xor.b32  	%r2042, %r2032, %r2041;
	mul.lo.s32 	%r2043, %r1959, 16777619;
	xor.b32  	%r2044, %r2033, %r2043;
	mul.lo.s32 	%r2045, %r1961, 16777619;
	xor.b32  	%r2046, %r2034, %r2045;
	xor.b32  	%r2047, %r346, %r2004;
	mul.lo.s32 	%r2048, %r2047, 16777619;
	xor.b32  	%r2049, %r2048, %r1978;
	rem.u32 	%r2050, %r2049, %r3421;
	shfl.sync.idx.b32 	%r2051|%p121, %r2050, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd33, %r2051, 128;
	add.s64 	%rd34, %rd2, %rd33;
	add.s64 	%rd35, %rd34, %rd16;
	ld.global.v4.u32 	{%r2052, %r2053, %r2054, %r2055}, [%rd35];
	mul.lo.s32 	%r2060, %r1976, 16777619;
	xor.b32  	%r2061, %r2052, %r2060;
	mul.lo.s32 	%r2062, %r1978, 16777619;
	xor.b32  	%r2063, %r2053, %r2062;
	mul.lo.s32 	%r2064, %r1980, 16777619;
	xor.b32  	%r2065, %r2054, %r2064;
	mul.lo.s32 	%r2066, %r1982, 16777619;
	xor.b32  	%r2067, %r2055, %r2066;
	xor.b32  	%r2068, %r383, %r2004;
	mul.lo.s32 	%r2069, %r2068, 16777619;
	xor.b32  	%r2070, %r2069, %r1999;
	rem.u32 	%r2071, %r2070, %r3421;
	shfl.sync.idx.b32 	%r2072|%p122, %r2071, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd36, %r2072, 128;
	add.s64 	%rd37, %rd2, %rd36;
	add.s64 	%rd38, %rd37, %rd16;
	ld.global.v4.u32 	{%r2073, %r2074, %r2075, %r2076}, [%rd38];
	mul.lo.s32 	%r2081, %r1997, 16777619;
	xor.b32  	%r2082, %r2073, %r2081;
	mul.lo.s32 	%r2083, %r1999, 16777619;
	xor.b32  	%r2084, %r2074, %r2083;
	mul.lo.s32 	%r2085, %r2001, 16777619;
	xor.b32  	%r2086, %r2075, %r2085;
	mul.lo.s32 	%r2087, %r2003, 16777619;
	xor.b32  	%r2088, %r2076, %r2087;
	add.s32 	%r2089, %r3514, 2;
	xor.b32  	%r2090, %r272, %r2089;
	mul.lo.s32 	%r2091, %r2090, 16777619;
	xor.b32  	%r2092, %r2091, %r2023;
	rem.u32 	%r2093, %r2092, %r3421;
	shfl.sync.idx.b32 	%r2094|%p123, %r2093, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd39, %r2094, 128;
	add.s64 	%rd40, %rd2, %rd39;
	add.s64 	%rd41, %rd40, %rd16;
	ld.global.v4.u32 	{%r2095, %r2096, %r2097, %r2098}, [%rd41];
	mul.lo.s32 	%r2103, %r2019, 16777619;
	xor.b32  	%r2104, %r2095, %r2103;
	mul.lo.s32 	%r2105, %r2021, 16777619;
	xor.b32  	%r2106, %r2096, %r2105;
	mul.lo.s32 	%r2107, %r2023, 16777619;
	xor.b32  	%r2108, %r2097, %r2107;
	mul.lo.s32 	%r2109, %r2025, 16777619;
	xor.b32  	%r2110, %r2098, %r2109;
	xor.b32  	%r2111, %r309, %r2089;
	mul.lo.s32 	%r2112, %r2111, 16777619;
	xor.b32  	%r2113, %r2112, %r2044;
	rem.u32 	%r2114, %r2113, %r3421;
	shfl.sync.idx.b32 	%r2115|%p124, %r2114, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd42, %r2115, 128;
	add.s64 	%rd43, %rd2, %rd42;
	add.s64 	%rd44, %rd43, %rd16;
	ld.global.v4.u32 	{%r2116, %r2117, %r2118, %r2119}, [%rd44];
	mul.lo.s32 	%r2124, %r2040, 16777619;
	xor.b32  	%r2125, %r2116, %r2124;
	mul.lo.s32 	%r2126, %r2042, 16777619;
	xor.b32  	%r2127, %r2117, %r2126;
	mul.lo.s32 	%r2128, %r2044, 16777619;
	xor.b32  	%r2129, %r2118, %r2128;
	mul.lo.s32 	%r2130, %r2046, 16777619;
	xor.b32  	%r2131, %r2119, %r2130;
	xor.b32  	%r2132, %r346, %r2089;
	mul.lo.s32 	%r2133, %r2132, 16777619;
	xor.b32  	%r2134, %r2133, %r2065;
	rem.u32 	%r2135, %r2134, %r3421;
	shfl.sync.idx.b32 	%r2136|%p125, %r2135, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd45, %r2136, 128;
	add.s64 	%rd46, %rd2, %rd45;
	add.s64 	%rd47, %rd46, %rd16;
	ld.global.v4.u32 	{%r2137, %r2138, %r2139, %r2140}, [%rd47];
	mul.lo.s32 	%r2145, %r2061, 16777619;
	xor.b32  	%r2146, %r2137, %r2145;
	mul.lo.s32 	%r2147, %r2063, 16777619;
	xor.b32  	%r2148, %r2138, %r2147;
	mul.lo.s32 	%r2149, %r2065, 16777619;
	xor.b32  	%r2150, %r2139, %r2149;
	mul.lo.s32 	%r2151, %r2067, 16777619;
	xor.b32  	%r2152, %r2140, %r2151;
	xor.b32  	%r2153, %r383, %r2089;
	mul.lo.s32 	%r2154, %r2153, 16777619;
	xor.b32  	%r2155, %r2154, %r2086;
	rem.u32 	%r2156, %r2155, %r3421;
	shfl.sync.idx.b32 	%r2157|%p126, %r2156, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd48, %r2157, 128;
	add.s64 	%rd49, %rd2, %rd48;
	add.s64 	%rd50, %rd49, %rd16;
	ld.global.v4.u32 	{%r2158, %r2159, %r2160, %r2161}, [%rd50];
	mul.lo.s32 	%r2166, %r2082, 16777619;
	xor.b32  	%r2167, %r2158, %r2166;
	mul.lo.s32 	%r2168, %r2084, 16777619;
	xor.b32  	%r2169, %r2159, %r2168;
	mul.lo.s32 	%r2170, %r2086, 16777619;
	xor.b32  	%r2171, %r2160, %r2170;
	mul.lo.s32 	%r2172, %r2088, 16777619;
	xor.b32  	%r2173, %r2161, %r2172;
	add.s32 	%r2174, %r3514, 3;
	xor.b32  	%r2175, %r272, %r2174;
	mul.lo.s32 	%r2176, %r2175, 16777619;
	xor.b32  	%r2177, %r2176, %r2110;
	rem.u32 	%r2178, %r2177, %r3421;
	shfl.sync.idx.b32 	%r2179|%p127, %r2178, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd51, %r2179, 128;
	add.s64 	%rd52, %rd2, %rd51;
	add.s64 	%rd53, %rd52, %rd16;
	ld.global.v4.u32 	{%r2180, %r2181, %r2182, %r2183}, [%rd53];
	mul.lo.s32 	%r2188, %r2104, 16777619;
	xor.b32  	%r3485, %r2180, %r2188;
	mul.lo.s32 	%r2189, %r2106, 16777619;
	xor.b32  	%r3484, %r2181, %r2189;
	mul.lo.s32 	%r2190, %r2108, 16777619;
	xor.b32  	%r3483, %r2182, %r2190;
	mul.lo.s32 	%r2191, %r2110, 16777619;
	xor.b32  	%r3482, %r2183, %r2191;
	xor.b32  	%r2192, %r309, %r2174;
	mul.lo.s32 	%r2193, %r2192, 16777619;
	xor.b32  	%r2194, %r2193, %r2131;
	rem.u32 	%r2195, %r2194, %r3421;
	shfl.sync.idx.b32 	%r2196|%p128, %r2195, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd54, %r2196, 128;
	add.s64 	%rd55, %rd2, %rd54;
	add.s64 	%rd56, %rd55, %rd16;
	ld.global.v4.u32 	{%r2197, %r2198, %r2199, %r2200}, [%rd56];
	mul.lo.s32 	%r2205, %r2125, 16777619;
	xor.b32  	%r3489, %r2197, %r2205;
	mul.lo.s32 	%r2206, %r2127, 16777619;
	xor.b32  	%r3488, %r2198, %r2206;
	mul.lo.s32 	%r2207, %r2129, 16777619;
	xor.b32  	%r3487, %r2199, %r2207;
	mul.lo.s32 	%r2208, %r2131, 16777619;
	xor.b32  	%r3486, %r2200, %r2208;
	xor.b32  	%r2209, %r346, %r2174;
	mul.lo.s32 	%r2210, %r2209, 16777619;
	xor.b32  	%r2211, %r2210, %r2152;
	rem.u32 	%r2212, %r2211, %r3421;
	shfl.sync.idx.b32 	%r2213|%p129, %r2212, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd57, %r2213, 128;
	add.s64 	%rd58, %rd2, %rd57;
	add.s64 	%rd59, %rd58, %rd16;
	ld.global.v4.u32 	{%r2214, %r2215, %r2216, %r2217}, [%rd59];
	mul.lo.s32 	%r2222, %r2146, 16777619;
	xor.b32  	%r3493, %r2214, %r2222;
	mul.lo.s32 	%r2223, %r2148, 16777619;
	xor.b32  	%r3492, %r2215, %r2223;
	mul.lo.s32 	%r2224, %r2150, 16777619;
	xor.b32  	%r3491, %r2216, %r2224;
	mul.lo.s32 	%r2225, %r2152, 16777619;
	xor.b32  	%r3490, %r2217, %r2225;
	xor.b32  	%r2226, %r383, %r2174;
	mul.lo.s32 	%r2227, %r2226, 16777619;
	xor.b32  	%r2228, %r2227, %r2173;
	rem.u32 	%r2229, %r2228, %r3421;
	shfl.sync.idx.b32 	%r2230|%p130, %r2229, %r1914, %r3420, %r3419;
	mul.wide.u32 	%rd60, %r2230, 128;
	add.s64 	%rd61, %rd2, %rd60;
	add.s64 	%rd62, %rd61, %rd16;
	ld.global.v4.u32 	{%r2231, %r2232, %r2233, %r2234}, [%rd62];
	mul.lo.s32 	%r2239, %r2167, 16777619;
	xor.b32  	%r3497, %r2231, %r2239;
	mul.lo.s32 	%r2240, %r2169, 16777619;
	xor.b32  	%r3496, %r2232, %r2240;
	mul.lo.s32 	%r2241, %r2171, 16777619;
	xor.b32  	%r3495, %r2233, %r2241;
	mul.lo.s32 	%r2242, %r2173, 16777619;
	xor.b32  	%r3494, %r2234, %r2242;
	add.s32 	%r3514, %r3514, 4;
	setp.lt.u32 	%p131, %r3514, 64;
	@%p131 bra 	LBB0_22;

	mov.u32 	%r3396, 6175;
	mov.u32 	%r3395, -1;
	cvt.u32.u64 	%r2243, %rd3;
	mul.lo.s32 	%r2244, %r3485, 16777619;
	xor.b32  	%r2245, %r2244, %r3484;
	mul.lo.s32 	%r2246, %r2245, 16777619;
	xor.b32  	%r2247, %r2246, %r3483;
	mul.lo.s32 	%r2248, %r2247, 16777619;
	xor.b32  	%r2249, %r2248, %r3482;
	mov.u32 	%r2251, 0;
	shfl.sync.idx.b32 	%r418|%p61, %r2249, %r2251, %r3396, %r3395;
	shfl.sync.idx.b32 	%r419|%p62, %r2249, %r1751, %r3396, %r3395;
	shfl.sync.idx.b32 	%r420|%p63, %r2249, %r856, %r3396, %r3395;
	shfl.sync.idx.b32 	%r421|%p64, %r2249, %r928, %r3396, %r3395;
	mov.u32 	%r2256, 4;
	shfl.sync.idx.b32 	%r422|%p65, %r2249, %r2256, %r3396, %r3395;
	mov.u32 	%r2257, 5;
	shfl.sync.idx.b32 	%r423|%p66, %r2249, %r2257, %r3396, %r3395;
	shfl.sync.idx.b32 	%r424|%p67, %r2249, %r920, %r3396, %r3395;
	mov.u32 	%r2259, 7;
	shfl.sync.idx.b32 	%r425|%p68, %r2249, %r2259, %r3396, %r3395;
	setp.ne.s32 	%p132, %r3481, %r2243;
	@%p132 bra 	LBB0_25;

	mov.u32 	%r3523, %r425;
	mov.u32 	%r3524, %r424;
	mov.u32 	%r3525, %r423;
	mov.u32 	%r3526, %r422;
	mov.u32 	%r3527, %r421;
	mov.u32 	%r3528, %r420;
	mov.u32 	%r3529, %r419;
	mov.u32 	%r3530, %r418;

LBB0_25:
	add.s32 	%r3399, %r3481, 1;
	mov.u32 	%r3398, 6175;
	mov.u32 	%r3397, -1;
	mul.lo.s32 	%r2260, %r3489, 16777619;
	xor.b32  	%r2261, %r2260, %r3488;
	mul.lo.s32 	%r2262, %r2261, 16777619;
	xor.b32  	%r2263, %r2262, %r3487;
	mul.lo.s32 	%r2264, %r2263, 16777619;
	xor.b32  	%r2265, %r2264, %r3486;
	shfl.sync.idx.b32 	%r442|%p69, %r2265, %r2251, %r3398, %r3397;
	shfl.sync.idx.b32 	%r443|%p70, %r2265, %r1751, %r3398, %r3397;
	shfl.sync.idx.b32 	%r444|%p71, %r2265, %r856, %r3398, %r3397;
	shfl.sync.idx.b32 	%r445|%p72, %r2265, %r928, %r3398, %r3397;
	shfl.sync.idx.b32 	%r446|%p73, %r2265, %r2256, %r3398, %r3397;
	shfl.sync.idx.b32 	%r447|%p74, %r2265, %r2257, %r3398, %r3397;
	shfl.sync.idx.b32 	%r448|%p75, %r2265, %r920, %r3398, %r3397;
	shfl.sync.idx.b32 	%r449|%p76, %r2265, %r2259, %r3398, %r3397;
	setp.ne.s32 	%p133, %r3399, %r2243;
	@%p133 bra 	LBB0_27;

	mov.u32 	%r3523, %r449;
	mov.u32 	%r3524, %r448;
	mov.u32 	%r3525, %r447;
	mov.u32 	%r3526, %r446;
	mov.u32 	%r3527, %r445;
	mov.u32 	%r3528, %r444;
	mov.u32 	%r3529, %r443;
	mov.u32 	%r3530, %r442;

LBB0_27:
	add.s32 	%r3402, %r3481, 2;
	mov.u32 	%r3401, 6175;
	mov.u32 	%r3400, -1;
	mul.lo.s32 	%r2277, %r3493, 16777619;
	xor.b32  	%r2278, %r2277, %r3492;
	mul.lo.s32 	%r2279, %r2278, 16777619;
	xor.b32  	%r2280, %r2279, %r3491;
	mul.lo.s32 	%r2281, %r2280, 16777619;
	xor.b32  	%r2282, %r2281, %r3490;
	shfl.sync.idx.b32 	%r466|%p77, %r2282, %r2251, %r3401, %r3400;
	shfl.sync.idx.b32 	%r467|%p78, %r2282, %r1751, %r3401, %r3400;
	shfl.sync.idx.b32 	%r468|%p79, %r2282, %r856, %r3401, %r3400;
	shfl.sync.idx.b32 	%r469|%p80, %r2282, %r928, %r3401, %r3400;
	shfl.sync.idx.b32 	%r470|%p81, %r2282, %r2256, %r3401, %r3400;
	shfl.sync.idx.b32 	%r471|%p82, %r2282, %r2257, %r3401, %r3400;
	shfl.sync.idx.b32 	%r472|%p83, %r2282, %r920, %r3401, %r3400;
	shfl.sync.idx.b32 	%r473|%p84, %r2282, %r2259, %r3401, %r3400;
	setp.ne.s32 	%p134, %r3402, %r2243;
	@%p134 bra 	LBB0_29;

	mov.u32 	%r3523, %r473;
	mov.u32 	%r3524, %r472;
	mov.u32 	%r3525, %r471;
	mov.u32 	%r3526, %r470;
	mov.u32 	%r3527, %r469;
	mov.u32 	%r3528, %r468;
	mov.u32 	%r3529, %r467;
	mov.u32 	%r3530, %r466;

LBB0_29:
	add.s32 	%r3405, %r3481, 3;
	mov.u32 	%r3404, 6175;
	mov.u32 	%r3403, -1;
	mul.lo.s32 	%r2294, %r3497, 16777619;
	xor.b32  	%r2295, %r2294, %r3496;
	mul.lo.s32 	%r2296, %r2295, 16777619;
	xor.b32  	%r2297, %r2296, %r3495;
	mul.lo.s32 	%r2298, %r2297, 16777619;
	xor.b32  	%r2299, %r2298, %r3494;
	shfl.sync.idx.b32 	%r490|%p85, %r2299, %r2251, %r3404, %r3403;
	shfl.sync.idx.b32 	%r491|%p86, %r2299, %r1751, %r3404, %r3403;
	shfl.sync.idx.b32 	%r492|%p87, %r2299, %r856, %r3404, %r3403;
	shfl.sync.idx.b32 	%r493|%p88, %r2299, %r928, %r3404, %r3403;
	shfl.sync.idx.b32 	%r494|%p89, %r2299, %r2256, %r3404, %r3403;
	shfl.sync.idx.b32 	%r495|%p90, %r2299, %r2257, %r3404, %r3403;
	shfl.sync.idx.b32 	%r496|%p91, %r2299, %r920, %r3404, %r3403;
	shfl.sync.idx.b32 	%r497|%p92, %r2299, %r2259, %r3404, %r3403;
	setp.ne.s32 	%p135, %r3405, %r2243;
	@%p135 bra 	LBB0_31;

	mov.u32 	%r3523, %r497;
	mov.u32 	%r3524, %r496;
	mov.u32 	%r3525, %r495;
	mov.u32 	%r3526, %r494;
	mov.u32 	%r3527, %r493;
	mov.u32 	%r3528, %r492;
	mov.u32 	%r3529, %r491;
	mov.u32 	%r3530, %r490;

LBB0_31:
	add.s32 	%r3481, %r3481, 4;
	setp.lt.u32 	%p136, %r3481, 8;
	@%p136 bra 	LBB0_5;

	mov.u32 	%r3547, -1;
	mov.u64 	%rd75, keccak_round_constants;
	// begin inline asm
	// xor3
	lop3.b32 %r2311, %r225, %r1864, %r3526, 0x96;
	lop3.b32 %r2312, %r226, %r1865, %r3525, 0x96;
	// end inline asm
	// begin inline asm
	// xor3
	lop3.b32 %r2319, %r1832, %r1872, %r3524, 0x96;
	lop3.b32 %r2320, %r1833, %r1873, %r3523, 0x96;
	// end inline asm
	xor.b32  	%r2341, %r2320, -2147483648;
	// begin inline asm
	// xor3
	lop3.b32 %r2327, %r1840, %r1880, %r1751, 0x96;
	lop3.b32 %r2328, %r1841, %r1881, %r2251, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2335, %r2341, %r2319, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2339, %r2319, %r2341, %r1751;
	// end inline asm
	xor.b32  	%r2364, %r3528, %r1856;
	xor.b32  	%r2445, %r2364, %r2335;
	xor.b32  	%r2365, %r3527, %r1857;
	xor.b32  	%r2444, %r2365, %r2339;
	xor.b32  	%r2586, %r225, %r2445;
	xor.b32  	%r2589, %r226, %r2444;
	xor.b32  	%r2493, %r1864, %r2445;
	xor.b32  	%r2492, %r1865, %r2444;
	xor.b32  	%r2540, %r3526, %r2445;
	xor.b32  	%r2541, %r3525, %r2444;
	// begin inline asm
	shf.l.wrap.b32 %r2343, %r2328, %r2327, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2347, %r2327, %r2328, %r1751;
	// end inline asm
	xor.b32  	%r2485, %r2343, %r2311;
	xor.b32  	%r2469, %r2347, %r2312;
	xor.b32  	%r2548, %r1832, %r2485;
	xor.b32  	%r2549, %r1833, %r2469;
	xor.b32  	%r2381, %r1872, %r2485;
	xor.b32  	%r2380, %r1873, %r2469;
	xor.b32  	%r2524, %r3524, %r2485;
	xor.b32  	%r2525, %r3523, %r2469;
	xor.b32  	%r2484, %r2469, -2147483648;
	xor.b32  	%r2357, %r3529, %r1849;
	xor.b32  	%r2356, %r3530, %r1848;
	// begin inline asm
	shf.l.wrap.b32 %r2351, %r2357, %r2356, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2355, %r2356, %r2357, %r1751;
	// end inline asm
	xor.b32  	%r2516, %r2351, %r2319;
	xor.b32  	%r2517, %r2355, %r2341;
	xor.b32  	%r2421, %r1840, %r2516;
	xor.b32  	%r2420, %r1841, %r2517;
	xor.b32  	%r2532, %r1880, %r2516;
	xor.b32  	%r2533, %r1881, %r2517;
	xor.b32  	%r2429, %r2516, 1;
	// begin inline asm
	shf.l.wrap.b32 %r2359, %r2365, %r2364, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2363, %r2364, %r2365, %r1751;
	// end inline asm
	xor.b32  	%r2508, %r2359, %r2327;
	xor.b32  	%r2509, %r2363, %r2328;
	xor.b32  	%r2500, %r1848, %r2508;
	xor.b32  	%r2501, %r1849, %r2509;
	xor.b32  	%r2477, %r3530, %r2508;
	xor.b32  	%r2476, %r3529, %r2509;
	// begin inline asm
	shf.l.wrap.b32 %r2367, %r2312, %r2311, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2371, %r2311, %r2312, %r1751;
	// end inline asm
	xor.b32  	%r2460, %r2367, %r2356;
	xor.b32  	%r2461, %r2371, %r2357;
	xor.b32  	%r2452, %r1856, %r2460;
	xor.b32  	%r2453, %r1857, %r2461;
	xor.b32  	%r2388, %r3528, %r2460;
	xor.b32  	%r2389, %r3527, %r2461;
	// begin inline asm
	shf.l.wrap.b32 %r2375, %r2381, %r2380, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2379, %r2380, %r2381, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2383, %r2389, %r2388, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2387, %r2388, %r2389, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2391, %r2516, %r2517, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2395, %r2517, %r2516, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2399, %r2460, %r2461, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2403, %r2461, %r2460, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2407, %r2444, %r2445, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2411, %r2445, %r2444, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2415, %r2421, %r2420, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2419, %r2420, %r2421, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2423, %r2429, %r2517, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2427, %r2517, %r2429, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2431, %r2509, %r2508, %r824;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2435, %r2508, %r2509, %r824;
	// end inline asm
	prmt.b32 	%r2657, %r2461, %r2460, %r1150;
	prmt.b32 	%r2660, %r2461, %r2460, %r1151;
	prmt.b32 	%r2705, %r2509, %r2508, %r1152;
	prmt.b32 	%r2708, %r2509, %r2508, %r1153;
	// begin inline asm
	shf.l.wrap.b32 %r2439, %r2445, %r2444, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2443, %r2444, %r2445, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2447, %r2453, %r2452, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2451, %r2452, %r2453, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2455, %r2461, %r2460, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2459, %r2460, %r2461, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2463, %r2469, %r2485, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2467, %r2485, %r2469, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2471, %r2477, %r2476, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2475, %r2476, %r2477, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2479, %r2485, %r2484, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2483, %r2484, %r2485, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2487, %r2493, %r2492, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2491, %r2492, %r2493, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2495, %r2501, %r2500, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2499, %r2500, %r2501, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2503, %r2509, %r2508, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2507, %r2508, %r2509, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2511, %r2517, %r2516, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2515, %r2516, %r2517, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2519, %r2525, %r2524, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2523, %r2524, %r2525, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2527, %r2533, %r2532, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2531, %r2532, %r2533, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2535, %r2541, %r2540, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2539, %r2540, %r2541, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2543, %r2549, %r2548, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2547, %r2548, %r2549, %r1751;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r2551, %r2586, %r2375, %r2423, 0xD2;
	lop3.b32 %r3597, %r2589, %r2379, %r2427, 0xD2;
	// end inline asm
	xor.b32  	%r3596, %r2551, 1;
	// begin inline asm
	// chi
	lop3.b32 %r3586, %r2375, %r2423, %r2503, 0xD2;
	lop3.b32 %r3587, %r2379, %r2427, %r2507, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3576, %r2423, %r2503, %r2455, 0xD2;
	lop3.b32 %r3577, %r2427, %r2507, %r2459, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3566, %r2503, %r2455, %r2586, 0xD2;
	lop3.b32 %r3567, %r2507, %r2459, %r2589, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3556, %r2455, %r2586, %r2375, 0xD2;
	lop3.b32 %r3557, %r2459, %r2589, %r2379, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3594, %r2495, %r2383, %r2535, 0xD2;
	lop3.b32 %r3595, %r2499, %r2387, %r2539, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3584, %r2383, %r2535, %r2479, 0xD2;
	lop3.b32 %r3585, %r2387, %r2539, %r2483, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3574, %r2535, %r2479, %r2391, 0xD2;
	lop3.b32 %r3575, %r2539, %r2483, %r2395, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3564, %r2479, %r2391, %r2495, 0xD2;
	lop3.b32 %r3565, %r2483, %r2395, %r2499, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3554, %r2391, %r2495, %r2383, 0xD2;
	lop3.b32 %r3555, %r2395, %r2499, %r2387, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3592, %r2543, %r2527, %r2431, 0xD2;
	lop3.b32 %r3593, %r2547, %r2531, %r2435, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3582, %r2527, %r2431, %r2657, 0xD2;
	lop3.b32 %r3583, %r2531, %r2435, %r2660, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3572, %r2431, %r2657, %r2407, 0xD2;
	lop3.b32 %r3573, %r2435, %r2660, %r2411, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3562, %r2657, %r2407, %r2543, 0xD2;
	lop3.b32 %r3563, %r2660, %r2411, %r2547, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3552, %r2407, %r2543, %r2527, 0xD2;
	lop3.b32 %r3553, %r2411, %r2547, %r2531, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3590, %r2447, %r2487, %r2519, 0xD2;
	lop3.b32 %r3591, %r2451, %r2491, %r2523, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3580, %r2487, %r2519, %r2511, 0xD2;
	lop3.b32 %r3581, %r2491, %r2523, %r2515, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3570, %r2519, %r2511, %r2705, 0xD2;
	lop3.b32 %r3571, %r2523, %r2515, %r2708, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3560, %r2511, %r2705, %r2447, 0xD2;
	lop3.b32 %r3561, %r2515, %r2708, %r2451, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3550, %r2705, %r2447, %r2487, 0xD2;
	lop3.b32 %r3551, %r2708, %r2451, %r2491, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3588, %r2415, %r2471, %r2399, 0xD2;
	lop3.b32 %r3589, %r2419, %r2475, %r2403, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3578, %r2471, %r2399, %r2439, 0xD2;
	lop3.b32 %r3579, %r2475, %r2403, %r2443, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3568, %r2399, %r2439, %r2463, 0xD2;
	lop3.b32 %r3569, %r2403, %r2443, %r2467, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3558, %r2439, %r2463, %r2415, 0xD2;
	lop3.b32 %r3559, %r2443, %r2467, %r2419, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3548, %r2463, %r2415, %r2471, 0xD2;
	lop3.b32 %r3549, %r2467, %r2419, %r2475, 0xD2;
	// end inline asm
	bra.uni 	LBB0_33;

LBB0_34:
	// begin inline asm
	// xor5
	lop3.b32 %r2756, %r3596, %r3594, %r3592, 0x96;
	lop3.b32 %r2756, %r2756, %r3590, %r3588, 0x96;
	lop3.b32 %r2757, %r3597, %r3595, %r3593, 0x96;
	lop3.b32 %r2757, %r2757, %r3591, %r3589, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2768, %r3586, %r3584, %r3582, 0x96;
	lop3.b32 %r2768, %r2768, %r3580, %r3578, 0x96;
	lop3.b32 %r2769, %r3587, %r3585, %r3583, 0x96;
	lop3.b32 %r2769, %r2769, %r3581, %r3579, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2780, %r3576, %r3574, %r3572, 0x96;
	lop3.b32 %r2780, %r2780, %r3570, %r3568, 0x96;
	lop3.b32 %r2781, %r3577, %r3575, %r3573, 0x96;
	lop3.b32 %r2781, %r2781, %r3571, %r3569, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2792, %r3566, %r3564, %r3562, 0x96;
	lop3.b32 %r2792, %r2792, %r3560, %r3558, 0x96;
	lop3.b32 %r2793, %r3567, %r3565, %r3563, 0x96;
	lop3.b32 %r2793, %r2793, %r3561, %r3559, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2804, %r3556, %r3554, %r3552, 0x96;
	lop3.b32 %r2804, %r2804, %r3550, %r3548, 0x96;
	lop3.b32 %r2805, %r3557, %r3555, %r3553, 0x96;
	lop3.b32 %r2805, %r2805, %r3551, %r3549, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2816, %r2769, %r2768, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2820, %r2768, %r2769, %r1751;
	// end inline asm
	xor.b32  	%r3232, %r2804, %r2816;
	xor.b32  	%r3233, %r2820, %r2805;
	xor.b32  	%r3067, %r3596, %r3232;
	xor.b32  	%r3070, %r3597, %r3233;
	xor.b32  	%r2974, %r3594, %r3232;
	xor.b32  	%r2973, %r3595, %r3233;
	xor.b32  	%r3021, %r3592, %r3232;
	xor.b32  	%r3022, %r3593, %r3233;
	xor.b32  	%r2926, %r3590, %r3232;
	xor.b32  	%r2925, %r3591, %r3233;
	xor.b32  	%r2893, %r3588, %r3232;
	xor.b32  	%r2894, %r3589, %r3233;
	// begin inline asm
	shf.l.wrap.b32 %r2824, %r2781, %r2780, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2828, %r2780, %r2781, %r1751;
	// end inline asm
	xor.b32  	%r3234, %r2824, %r2756;
	xor.b32  	%r3235, %r2828, %r2757;
	xor.b32  	%r3029, %r3586, %r3234;
	xor.b32  	%r3030, %r3587, %r3235;
	xor.b32  	%r2862, %r3584, %r3234;
	xor.b32  	%r2861, %r3585, %r3235;
	xor.b32  	%r3005, %r3582, %r3234;
	xor.b32  	%r3006, %r3583, %r3235;
	xor.b32  	%r2966, %r3580, %r3234;
	xor.b32  	%r2965, %r3581, %r3235;
	xor.b32  	%r2949, %r3578, %r3234;
	xor.b32  	%r2950, %r3579, %r3235;
	// begin inline asm
	shf.l.wrap.b32 %r2832, %r2793, %r2792, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2836, %r2792, %r2793, %r1751;
	// end inline asm
	xor.b32  	%r3236, %r2832, %r2768;
	xor.b32  	%r3237, %r2836, %r2769;
	xor.b32  	%r2902, %r3576, %r3236;
	xor.b32  	%r2901, %r3577, %r3237;
	xor.b32  	%r3013, %r3574, %r3236;
	xor.b32  	%r3014, %r3575, %r3237;
	xor.b32  	%r2910, %r3572, %r3236;
	xor.b32  	%r2909, %r3573, %r3237;
	xor.b32  	%r2997, %r3570, %r3236;
	xor.b32  	%r2998, %r3571, %r3237;
	xor.b32  	%r2878, %r3568, %r3236;
	xor.b32  	%r2877, %r3569, %r3237;
	// begin inline asm
	shf.l.wrap.b32 %r2840, %r2805, %r2804, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2844, %r2804, %r2805, %r1751;
	// end inline asm
	xor.b32  	%r3238, %r2840, %r2780;
	xor.b32  	%r3239, %r2844, %r2781;
	xor.b32  	%r2981, %r3566, %r3238;
	xor.b32  	%r2982, %r3567, %r3239;
	xor.b32  	%r2958, %r3564, %r3238;
	xor.b32  	%r2957, %r3565, %r3239;
	xor.b32  	%r2917, %r3562, %r3238;
	xor.b32  	%r2918, %r3563, %r3239;
	xor.b32  	%r2989, %r3560, %r3238;
	xor.b32  	%r2990, %r3561, %r3239;
	xor.b32  	%r3240, %r3558, %r3238;
	xor.b32  	%r3241, %r3559, %r3239;
	// begin inline asm
	shf.l.wrap.b32 %r2848, %r2757, %r2756, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2852, %r2756, %r2757, %r1751;
	// end inline asm
	xor.b32  	%r3242, %r2848, %r2792;
	xor.b32  	%r3243, %r2852, %r2793;
	xor.b32  	%r2933, %r3556, %r3242;
	xor.b32  	%r2934, %r3557, %r3243;
	xor.b32  	%r2869, %r3554, %r3242;
	xor.b32  	%r2870, %r3555, %r3243;
	xor.b32  	%r2886, %r3552, %r3242;
	xor.b32  	%r2885, %r3553, %r3243;
	xor.b32  	%r3244, %r3550, %r3242;
	xor.b32  	%r3245, %r3551, %r3243;
	xor.b32  	%r2941, %r3548, %r3242;
	xor.b32  	%r2942, %r3549, %r3243;
	// begin inline asm
	shf.l.wrap.b32 %r2856, %r2862, %r2861, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2860, %r2861, %r2862, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2864, %r2870, %r2869, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2868, %r2869, %r2870, %r776;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2872, %r2878, %r2877, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2876, %r2877, %r2878, %r784;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2880, %r2886, %r2885, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2884, %r2885, %r2886, %r792;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2888, %r2894, %r2893, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2892, %r2893, %r2894, %r800;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2896, %r2902, %r2901, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2900, %r2901, %r2902, %r808;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2904, %r2910, %r2909, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2908, %r2909, %r2910, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2912, %r2918, %r2917, %r824;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2916, %r2917, %r2918, %r824;
	// end inline asm
	prmt.b32 	%r3138, %r3245, %r3244, %r1150;
	prmt.b32 	%r3141, %r3245, %r3244, %r1151;
	prmt.b32 	%r3186, %r3241, %r3240, %r1152;
	prmt.b32 	%r3189, %r3241, %r3240, %r1153;
	// begin inline asm
	shf.l.wrap.b32 %r2920, %r2926, %r2925, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2924, %r2925, %r2926, %r832;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2928, %r2934, %r2933, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2932, %r2933, %r2934, %r840;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2936, %r2942, %r2941, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2940, %r2941, %r2942, %r848;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2944, %r2950, %r2949, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2948, %r2949, %r2950, %r856;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2952, %r2958, %r2957, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2956, %r2957, %r2958, %r864;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2960, %r2966, %r2965, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2964, %r2965, %r2966, %r872;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2968, %r2974, %r2973, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2972, %r2973, %r2974, %r880;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2976, %r2982, %r2981, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2980, %r2981, %r2982, %r888;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2984, %r2990, %r2989, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2988, %r2989, %r2990, %r896;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2992, %r2998, %r2997, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2996, %r2997, %r2998, %r904;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3000, %r3006, %r3005, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3004, %r3005, %r3006, %r912;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3008, %r3014, %r3013, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3012, %r3013, %r3014, %r920;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3016, %r3022, %r3021, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3020, %r3021, %r3022, %r928;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3024, %r3030, %r3029, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3028, %r3029, %r3030, %r1751;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3032, %r3067, %r2856, %r2904, 0xD2;
	lop3.b32 %r3033, %r3070, %r2860, %r2908, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3586, %r2856, %r2904, %r2984, 0xD2;
	lop3.b32 %r3587, %r2860, %r2908, %r2988, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3576, %r2904, %r2984, %r2936, 0xD2;
	lop3.b32 %r3577, %r2908, %r2988, %r2940, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3566, %r2984, %r2936, %r3067, 0xD2;
	lop3.b32 %r3567, %r2988, %r2940, %r3070, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3556, %r2936, %r3067, %r2856, 0xD2;
	lop3.b32 %r3557, %r2940, %r3070, %r2860, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3594, %r2976, %r2864, %r3016, 0xD2;
	lop3.b32 %r3595, %r2980, %r2868, %r3020, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3584, %r2864, %r3016, %r2960, 0xD2;
	lop3.b32 %r3585, %r2868, %r3020, %r2964, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3574, %r3016, %r2960, %r2872, 0xD2;
	lop3.b32 %r3575, %r3020, %r2964, %r2876, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3564, %r2960, %r2872, %r2976, 0xD2;
	lop3.b32 %r3565, %r2964, %r2876, %r2980, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3554, %r2872, %r2976, %r2864, 0xD2;
	lop3.b32 %r3555, %r2876, %r2980, %r2868, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3592, %r3024, %r3008, %r2912, 0xD2;
	lop3.b32 %r3593, %r3028, %r3012, %r2916, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3582, %r3008, %r2912, %r3138, 0xD2;
	lop3.b32 %r3583, %r3012, %r2916, %r3141, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3572, %r2912, %r3138, %r2888, 0xD2;
	lop3.b32 %r3573, %r2916, %r3141, %r2892, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3562, %r3138, %r2888, %r3024, 0xD2;
	lop3.b32 %r3563, %r3141, %r2892, %r3028, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3552, %r2888, %r3024, %r3008, 0xD2;
	lop3.b32 %r3553, %r2892, %r3028, %r3012, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3590, %r2928, %r2968, %r3000, 0xD2;
	lop3.b32 %r3591, %r2932, %r2972, %r3004, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3580, %r2968, %r3000, %r2992, 0xD2;
	lop3.b32 %r3581, %r2972, %r3004, %r2996, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3570, %r3000, %r2992, %r3186, 0xD2;
	lop3.b32 %r3571, %r3004, %r2996, %r3189, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3560, %r2992, %r3186, %r2928, 0xD2;
	lop3.b32 %r3561, %r2996, %r3189, %r2932, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3550, %r3186, %r2928, %r2968, 0xD2;
	lop3.b32 %r3551, %r3189, %r2932, %r2972, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3588, %r2896, %r2952, %r2880, 0xD2;
	lop3.b32 %r3589, %r2900, %r2956, %r2884, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3578, %r2952, %r2880, %r2920, 0xD2;
	lop3.b32 %r3579, %r2956, %r2884, %r2924, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3568, %r2880, %r2920, %r2944, 0xD2;
	lop3.b32 %r3569, %r2884, %r2924, %r2948, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3558, %r2920, %r2944, %r2896, 0xD2;
	lop3.b32 %r3559, %r2924, %r2948, %r2900, 0xD2;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3548, %r2944, %r2896, %r2952, 0xD2;
	lop3.b32 %r3549, %r2948, %r2900, %r2956, 0xD2;
	// end inline asm
	add.s64 	%rd5, %rd75, 8;
	ld.const.v2.u32 	{%r3250, %r3251}, [%rd75+8];
	xor.b32  	%r3597, %r3033, %r3251;
	xor.b32  	%r3596, %r3032, %r3250;
	mov.u64 	%rd75, %rd5;

LBB0_33:
	add.s32 	%r3547, %r3547, 1;
	setp.eq.s32 	%p137, %r3547, 22;
	@%p137 bra 	LBB0_35;
	bra.uni 	LBB0_34;

LBB0_35:
	// begin inline asm
	// xor5
	lop3.b32 %r3254, %r3596, %r3594, %r3592, 0x96;
	lop3.b32 %r3254, %r3254, %r3590, %r3588, 0x96;
	lop3.b32 %r3255, %r3597, %r3595, %r3593, 0x96;
	lop3.b32 %r3255, %r3255, %r3591, %r3589, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r3266, %r3586, %r3584, %r3582, 0x96;
	lop3.b32 %r3266, %r3266, %r3580, %r3578, 0x96;
	lop3.b32 %r3267, %r3587, %r3585, %r3583, 0x96;
	lop3.b32 %r3267, %r3267, %r3581, %r3579, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r3278, %r3576, %r3574, %r3572, 0x96;
	lop3.b32 %r3278, %r3278, %r3570, %r3568, 0x96;
	lop3.b32 %r3279, %r3577, %r3575, %r3573, 0x96;
	lop3.b32 %r3279, %r3279, %r3571, %r3569, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r3290, %r3566, %r3564, %r3562, 0x96;
	lop3.b32 %r3290, %r3290, %r3560, %r3558, 0x96;
	lop3.b32 %r3291, %r3567, %r3565, %r3563, 0x96;
	lop3.b32 %r3291, %r3291, %r3561, %r3559, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r3302, %r3556, %r3554, %r3552, 0x96;
	lop3.b32 %r3302, %r3302, %r3550, %r3548, 0x96;
	lop3.b32 %r3303, %r3557, %r3555, %r3553, 0x96;
	lop3.b32 %r3303, %r3303, %r3551, %r3549, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3314, %r3267, %r3266, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3318, %r3266, %r3267, %r1751;
	// end inline asm
	// begin inline asm
	// xor3
	lop3.b32 %r3322, %r3596, %r3302, %r3314, 0x96;
	lop3.b32 %r3323, %r3597, %r3303, %r3318, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3330, %r3279, %r3278, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3334, %r3278, %r3279, %r1751;
	// end inline asm
	// begin inline asm
	// xor3
	lop3.b32 %r3338, %r3584, %r3254, %r3330, 0x96;
	lop3.b32 %r3339, %r3585, %r3255, %r3334, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3346, %r3291, %r3290, %r1751;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3350, %r3290, %r3291, %r1751;
	// end inline asm
	// begin inline asm
	// xor3
	lop3.b32 %r3354, %r3572, %r3266, %r3346, 0x96;
	lop3.b32 %r3355, %r3573, %r3267, %r3350, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3362, %r3338, %r3339, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3366, %r3339, %r3338, %r768;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3370, %r3354, %r3355, %r816;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r3374, %r3355, %r3354, %r816;
	// end inline asm
	// begin inline asm
	// chi
	lop3.b32 %r3378, %r3322, %r3362, %r3370, 0xD2;
	lop3.b32 %r3379, %r3323, %r3366, %r3374, 0xD2;
	// end inline asm
	xor.b32  	%r3386, %r3378, -2147450872;
	xor.b32  	%r3387, %r3379, -2147483648;
	// begin inline asm
	mov.b64 %rd64,{%r3386,%r3387}; 
	
	// end inline asm
	// begin inline asm
	mov.b64 {%r3388,%r3389},%rd64; 
	
	// end inline asm
	mov.u32 	%r3392, 291;
	prmt.b32 	%r3391, %r3388, %r2251, %r3392;
	prmt.b32 	%r3390, %r3389, %r2251, %r3392;
	// begin inline asm
	mov.b64 %rd66,{%r3390,%r3391}; 
	
	// end inline asm
	ld.const.u64 	%rd67, [d_target];
	setp.gt.u64 	%p138, %rd66, %rd67;
	@%p138 bra 	LBB0_38;

	ld.param.u64 	%rd72, [_Z13ethash_searchP14Search_resultsm_param_0];
	cvta.to.global.u64 	%rd71, %rd72;
	atom.global.inc.u32 	%r717, [%rd71], -1;
	setp.gt.u32 	%p139, %r717, 3;
	@%p139 bra 	LBB0_38;

	mov.u32 	%r3410, %tid.x;
	mov.u32 	%r3409, %ntid.x;
	mov.u32 	%r3408, %ctaid.x;
	mad.lo.s32 	%r3407, %r3408, %r3409, %r3410;
	ld.param.u64 	%rd74, [_Z13ethash_searchP14Search_resultsm_param_0];
	cvta.to.global.u64 	%rd73, %rd74;
	mul.wide.u32 	%rd68, %r717, 4;
	add.s64 	%rd69, %rd73, %rd68;
	st.global.u32 	[%rd69+8], %r3407;
	st.volatile.global.u32 	[%rd73+4], %r1751;

LBB0_38:
	ret;

}
	// .globl	_Z25ethash_calculate_dag_itemj
.visible .entry _Z25ethash_calculate_dag_itemj(
	.param .u32 _Z25ethash_calculate_dag_itemj_param_0
)
{
	.local .align 16 .b8 	__local_depot1[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .b32 	%r<2661>;
	.reg .b64 	%rd<154>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r536, [_Z25ethash_calculate_dag_itemj_param_0];
	mov.u32 	%r537, %ntid.x;
	mov.u32 	%r538, %ctaid.x;
	mov.u32 	%r539, %tid.x;
	mad.lo.s32 	%r540, %r538, %r537, %r539;
	add.s32 	%r1, %r540, %r536;
	shr.u32 	%r541, %r1, 1;
	and.b32  	%r542, %r541, 2147483646;
	ld.const.u32 	%r543, [d_dag_size];
	setp.ge.u32 	%p17, %r542, %r543;
	@%p17 bra 	LBB1_20;

	ld.const.u64 	%rd56, [d_light];
	cvta.to.global.u64 	%rd1, %rd56;
	ld.const.u32 	%r2, [d_light_size];
	rem.u32 	%r579, %r1, %r2;
	mul.wide.u32 	%rd57, %r579, 64;
	add.s64 	%rd58, %rd1, %rd57;
	add.u64 	%rd59, %SP, 0;
	add.u64 	%rd39, %SPL, 0;
	ld.global.v4.u32 	{%r580, %r581, %r2382, %r2383}, [%rd58];
	st.local.v4.u32 	[%rd39], {%r580, %r581, %r2382, %r2383};
	add.s64 	%rd3, %rd59, 16;
	cvta.to.local.u64 	%rd4, %rd3;
	ld.global.v4.u32 	{%r2380, %r2381, %r2372, %r2373}, [%rd58+16];
	st.local.v4.u32 	[%rd4], {%r2380, %r2381, %r2372, %r2373};
	add.s64 	%rd5, %rd59, 32;
	cvta.to.local.u64 	%rd6, %rd5;
	ld.global.v4.u32 	{%r2376, %r2377, %r2384, %r2385}, [%rd58+32];
	st.local.v4.u32 	[%rd6], {%r2376, %r2377, %r2384, %r2385};
	add.s64 	%rd7, %rd59, 48;
	cvta.to.local.u64 	%rd8, %rd7;
	ld.global.v4.u32 	{%r2374, %r2375, %r2378, %r2379}, [%rd58+48];
	st.local.v4.u32 	[%rd8], {%r2374, %r2375, %r2378, %r2379};
	xor.b32  	%r598, %r580, %r1;
	st.local.u32 	[%rd39], %r598;
	add.s64 	%rd10, %rd59, 72;
	add.s64 	%rd12, %rd59, 80;
	cvta.to.local.u64 	%rd13, %rd12;
	mov.u32 	%r2386, 0;
	st.local.v4.u32 	[%rd13], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd15, %rd59, 96;
	cvta.to.local.u64 	%rd16, %rd15;
	st.local.v4.u32 	[%rd16], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd18, %rd59, 112;
	cvta.to.local.u64 	%rd19, %rd18;
	st.local.v4.u32 	[%rd19], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd21, %rd59, 128;
	cvta.to.local.u64 	%rd22, %rd21;
	st.local.v4.u32 	[%rd22], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd24, %rd59, 144;
	cvta.to.local.u64 	%rd25, %rd24;
	st.local.v4.u32 	[%rd25], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd27, %rd59, 160;
	cvta.to.local.u64 	%rd28, %rd27;
	st.local.v4.u32 	[%rd28], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd30, %rd59, 176;
	cvta.to.local.u64 	%rd31, %rd30;
	st.local.v4.u32 	[%rd31], {%r2386, %r2386, %r2386, %r2386};
	add.s64 	%rd60, %rd59, 192;
	cvta.to.local.u64 	%rd32, %rd60;
	st.local.v2.u32 	[%rd32], {%r2386, %r2386};
	add.s64 	%rd33, %rd59, 64;
	cvta.to.local.u64 	%rd34, %rd33;
	mov.u32 	%r2401, -2147483648;
	mov.u32 	%r2400, 1;
	st.local.v4.u32 	[%rd34], {%r2400, %r2401, %r2386, %r2386};
	add.s64 	%rd35, %rd59, 40;
	or.b64  	%rd36, %rd59, 8;
	add.s64 	%rd37, %rd59, 56;
	add.s64 	%rd38, %rd59, 24;
	ld.local.v2.u32 	{%r2420, %r2421}, [%rd39];
	mov.u32 	%r2387, %r2386;
	mov.u32 	%r2388, %r2386;
	mov.u32 	%r2389, %r2386;
	mov.u32 	%r2390, %r2386;
	mov.u32 	%r2391, %r2386;
	mov.u32 	%r2392, %r2386;
	mov.u32 	%r2393, %r2386;
	mov.u32 	%r2394, %r2386;
	mov.u32 	%r2395, %r2386;
	mov.u32 	%r2396, %r2386;
	mov.u32 	%r2397, %r2386;
	mov.u32 	%r2398, %r2386;
	mov.u32 	%r2399, %r2386;
	mov.u32 	%r2402, %r2386;
	mov.u32 	%r2403, %r2386;
	mov.u32 	%r2404, %r2386;
	mov.u32 	%r2405, %r2386;
	mov.u32 	%r2406, %r2386;
	mov.u32 	%r2407, %r2386;
	mov.u32 	%r2408, %r2386;
	mov.u32 	%r2409, %r2386;
	mov.u32 	%r2410, %r2386;
	mov.u32 	%r2411, %r2386;
	mov.u32 	%r2412, %r2386;
	mov.u32 	%r2413, %r2386;
	mov.u32 	%r2414, %r2386;
	mov.u32 	%r2415, %r2386;
	mov.u32 	%r2416, %r2386;
	mov.u32 	%r2417, %r2386;
	mov.u32 	%r2418, %r2386;
	mov.u32 	%r2419, %r2386;
	mov.u32 	%r2422, %r2386;
	bra.uni 	LBB1_2;

LBB1_3:
	add.u64 	%rd152, %SP, 0;
	add.s64 	%rd151, %rd152, 152;
	add.u64 	%rd150, %SP, 0;
	add.s64 	%rd149, %rd150, 184;
	add.s64 	%rd148, %rd150, 120;
	add.u64 	%rd147, %SP, 0;
	add.s64 	%rd146, %rd147, 104;
	add.s64 	%rd145, %rd147, 136;
	add.s64 	%rd144, %rd147, 168;
	add.s64 	%rd143, %rd147, 88;
	mov.u32 	%r892, 1;
	// begin inline asm
	// xor5
	lop3.b32 %r601, %r2420, %r2384, %r2418, 0x96;
	lop3.b32 %r601, %r601, %r2416, %r2414, 0x96;
	lop3.b32 %r602, %r2421, %r2385, %r2419, 0x96;
	lop3.b32 %r602, %r602, %r2417, %r2415, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r613, %r2382, %r2374, %r2412, 0x96;
	lop3.b32 %r613, %r613, %r2410, %r2408, 0x96;
	lop3.b32 %r614, %r2383, %r2375, %r2413, 0x96;
	lop3.b32 %r614, %r614, %r2411, %r2409, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r625, %r2380, %r2378, %r2406, 0x96;
	lop3.b32 %r625, %r625, %r2404, %r2402, 0x96;
	lop3.b32 %r626, %r2381, %r2379, %r2407, 0x96;
	lop3.b32 %r626, %r626, %r2405, %r2403, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r637, %r2372, %r2400, %r2398, 0x96;
	lop3.b32 %r637, %r637, %r2396, %r2394, 0x96;
	lop3.b32 %r638, %r2373, %r2401, %r2399, 0x96;
	lop3.b32 %r638, %r638, %r2397, %r2395, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r649, %r2376, %r2392, %r2390, 0x96;
	lop3.b32 %r649, %r649, %r2388, %r2386, 0x96;
	lop3.b32 %r650, %r2377, %r2393, %r2391, 0x96;
	lop3.b32 %r650, %r650, %r2389, %r2387, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r661, %r614, %r613, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r665, %r613, %r614, %r892;
	// end inline asm
	xor.b32  	%r1095, %r649, %r661;
	xor.b32  	%r1096, %r665, %r650;
	xor.b32  	%r1097, %r2421, %r1096;
	xor.b32  	%r1098, %r2420, %r1095;
	xor.b32  	%r834, %r2385, %r1096;
	xor.b32  	%r835, %r2384, %r1095;
	cvta.to.local.u64 	%rd62, %rd35;
	st.local.v2.u32 	[%rd39], {%r1098, %r1097};
	st.local.v2.u32 	[%rd62], {%r835, %r834};
	xor.b32  	%r883, %r2419, %r1096;
	xor.b32  	%r882, %r2418, %r1095;
	st.local.v2.u32 	[%rd13], {%r882, %r883};
	xor.b32  	%r786, %r2417, %r1096;
	xor.b32  	%r787, %r2416, %r1095;
	cvta.to.local.u64 	%rd64, %rd148;
	st.local.v2.u32 	[%rd64], {%r787, %r786};
	xor.b32  	%r739, %r2415, %r1096;
	xor.b32  	%r738, %r2414, %r1095;
	st.local.v2.u32 	[%rd28], {%r738, %r739};
	// begin inline asm
	shf.l.wrap.b32 %r669, %r626, %r625, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r673, %r625, %r626, %r892;
	// end inline asm
	xor.b32  	%r1099, %r669, %r601;
	xor.b32  	%r1100, %r673, %r602;
	xor.b32  	%r891, %r2383, %r1100;
	xor.b32  	%r890, %r2382, %r1099;
	cvta.to.local.u64 	%rd66, %rd36;
	st.local.v2.u32 	[%rd66], {%r890, %r891};
	xor.b32  	%r706, %r2375, %r1100;
	xor.b32  	%r707, %r2374, %r1099;
	st.local.v2.u32 	[%rd8], {%r707, %r706};
	xor.b32  	%r867, %r2413, %r1100;
	xor.b32  	%r866, %r2412, %r1099;
	cvta.to.local.u64 	%rd68, %rd143;
	st.local.v2.u32 	[%rd68], {%r866, %r867};
	xor.b32  	%r826, %r2411, %r1100;
	xor.b32  	%r827, %r2410, %r1099;
	st.local.v2.u32 	[%rd22], {%r827, %r826};
	xor.b32  	%r811, %r2409, %r1100;
	xor.b32  	%r810, %r2408, %r1099;
	cvta.to.local.u64 	%rd70, %rd144;
	st.local.v2.u32 	[%rd70], {%r810, %r811};
	// begin inline asm
	shf.l.wrap.b32 %r677, %r638, %r637, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r681, %r637, %r638, %r892;
	// end inline asm
	xor.b32  	%r1101, %r677, %r613;
	xor.b32  	%r1102, %r681, %r614;
	xor.b32  	%r746, %r2381, %r1102;
	xor.b32  	%r747, %r2380, %r1101;
	st.local.v2.u32 	[%rd4], {%r747, %r746};
	xor.b32  	%r875, %r2379, %r1102;
	xor.b32  	%r874, %r2378, %r1101;
	cvta.to.local.u64 	%rd72, %rd37;
	st.local.v2.u32 	[%rd72], {%r874, %r875};
	xor.b32  	%r754, %r2407, %r1102;
	xor.b32  	%r755, %r2406, %r1101;
	st.local.v2.u32 	[%rd16], {%r755, %r754};
	xor.b32  	%r859, %r2405, %r1102;
	xor.b32  	%r858, %r2404, %r1101;
	cvta.to.local.u64 	%rd74, %rd145;
	st.local.v2.u32 	[%rd74], {%r858, %r859};
	xor.b32  	%r722, %r2403, %r1102;
	xor.b32  	%r723, %r2402, %r1101;
	st.local.v2.u32 	[%rd31], {%r723, %r722};
	// begin inline asm
	shf.l.wrap.b32 %r685, %r650, %r649, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r689, %r649, %r650, %r892;
	// end inline asm
	xor.b32  	%r1103, %r685, %r625;
	xor.b32  	%r1104, %r689, %r626;
	xor.b32  	%r843, %r2373, %r1104;
	xor.b32  	%r842, %r2372, %r1103;
	cvta.to.local.u64 	%rd76, %rd38;
	st.local.v2.u32 	[%rd76], {%r842, %r843};
	xor.b32  	%r818, %r2401, %r1104;
	xor.b32  	%r819, %r2400, %r1103;
	st.local.v2.u32 	[%rd34], {%r819, %r818};
	xor.b32  	%r763, %r2399, %r1104;
	xor.b32  	%r762, %r2398, %r1103;
	cvta.to.local.u64 	%rd78, %rd146;
	st.local.v2.u32 	[%rd78], {%r762, %r763};
	xor.b32  	%r851, %r2397, %r1104;
	xor.b32  	%r850, %r2396, %r1103;
	st.local.v2.u32 	[%rd25], {%r850, %r851};
	xor.b32  	%r778, %r2395, %r1104;
	xor.b32  	%r779, %r2394, %r1103;
	cvta.to.local.u64 	%rd80, %rd149;
	st.local.v2.u32 	[%rd80], {%r779, %r778};
	// begin inline asm
	shf.l.wrap.b32 %r693, %r602, %r601, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r697, %r601, %r602, %r892;
	// end inline asm
	xor.b32  	%r1105, %r693, %r637;
	xor.b32  	%r1106, %r697, %r638;
	xor.b32  	%r795, %r2377, %r1106;
	xor.b32  	%r794, %r2376, %r1105;
	st.local.v2.u32 	[%rd6], {%r794, %r795};
	xor.b32  	%r715, %r2393, %r1106;
	xor.b32  	%r714, %r2392, %r1105;
	cvta.to.local.u64 	%rd82, %rd10;
	st.local.v2.u32 	[%rd82], {%r714, %r715};
	xor.b32  	%r730, %r2391, %r1106;
	xor.b32  	%r731, %r2390, %r1105;
	st.local.v2.u32 	[%rd19], {%r731, %r730};
	xor.b32  	%r771, %r2389, %r1106;
	xor.b32  	%r770, %r2388, %r1105;
	cvta.to.local.u64 	%rd84, %rd151;
	st.local.v2.u32 	[%rd84], {%r770, %r771};
	xor.b32  	%r803, %r2387, %r1106;
	xor.b32  	%r802, %r2386, %r1105;
	st.local.v2.u32 	[%rd32], {%r802, %r803};
	mov.u32 	%r708, 44;
	// begin inline asm
	shf.l.wrap.b32 %r705, %r706, %r707, %r708;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r701, %r707, %r706, %r708;
	// end inline asm
	st.local.v2.u32 	[%rd66], {%r701, %r705};
	mov.u32 	%r716, 20;
	// begin inline asm
	shf.l.wrap.b32 %r713, %r714, %r715, %r716;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r709, %r715, %r714, %r716;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r709, %r713};
	mov.u32 	%r724, 61;
	// begin inline asm
	shf.l.wrap.b32 %r721, %r722, %r723, %r724;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r717, %r723, %r722, %r724;
	// end inline asm
	st.local.v2.u32 	[%rd82], {%r717, %r721};
	mov.u32 	%r732, 39;
	// begin inline asm
	shf.l.wrap.b32 %r729, %r730, %r731, %r732;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r725, %r731, %r730, %r732;
	// end inline asm
	st.local.v2.u32 	[%rd31], {%r725, %r729};
	mov.u32 	%r740, 18;
	// begin inline asm
	shf.l.wrap.b32 %r737, %r738, %r739, %r740;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r733, %r739, %r738, %r740;
	// end inline asm
	st.local.v2.u32 	[%rd19], {%r733, %r737};
	mov.u32 	%r748, 62;
	// begin inline asm
	shf.l.wrap.b32 %r745, %r746, %r747, %r748;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r741, %r747, %r746, %r748;
	// end inline asm
	st.local.v2.u32 	[%rd28], {%r741, %r745};
	mov.u32 	%r756, 43;
	// begin inline asm
	shf.l.wrap.b32 %r753, %r754, %r755, %r756;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r749, %r755, %r754, %r756;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r749, %r753};
	mov.u32 	%r764, 25;
	// begin inline asm
	shf.l.wrap.b32 %r761, %r762, %r763, %r764;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r757, %r763, %r762, %r764;
	// end inline asm
	st.local.v2.u32 	[%rd16], {%r757, %r761};
	mov.u32 	%r772, 8;
	// begin inline asm
	shf.l.wrap.b32 %r769, %r770, %r771, %r772;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r765, %r771, %r770, %r772;
	// end inline asm
	st.local.v2.u32 	[%rd78], {%r765, %r769};
	mov.u32 	%r780, 56;
	// begin inline asm
	shf.l.wrap.b32 %r777, %r778, %r779, %r780;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r773, %r779, %r778, %r780;
	// end inline asm
	st.local.v2.u32 	[%rd84], {%r773, %r777};
	mov.u32 	%r788, 41;
	// begin inline asm
	shf.l.wrap.b32 %r785, %r786, %r787, %r788;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r781, %r787, %r786, %r788;
	// end inline asm
	st.local.v2.u32 	[%rd80], {%r781, %r785};
	mov.u32 	%r796, 27;
	// begin inline asm
	shf.l.wrap.b32 %r793, %r794, %r795, %r796;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r789, %r795, %r794, %r796;
	// end inline asm
	st.local.v2.u32 	[%rd64], {%r789, %r793};
	mov.u32 	%r804, 14;
	// begin inline asm
	shf.l.wrap.b32 %r801, %r802, %r803, %r804;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r797, %r803, %r802, %r804;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r797, %r801};
	mov.u32 	%r812, 2;
	// begin inline asm
	shf.l.wrap.b32 %r809, %r810, %r811, %r812;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r805, %r811, %r810, %r812;
	// end inline asm
	st.local.v2.u32 	[%rd32], {%r805, %r809};
	mov.u32 	%r820, 55;
	// begin inline asm
	shf.l.wrap.b32 %r817, %r818, %r819, %r820;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r813, %r819, %r818, %r820;
	// end inline asm
	st.local.v2.u32 	[%rd70], {%r813, %r817};
	mov.u32 	%r828, 45;
	// begin inline asm
	shf.l.wrap.b32 %r825, %r826, %r827, %r828;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r821, %r827, %r826, %r828;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r821, %r825};
	mov.u32 	%r836, 36;
	// begin inline asm
	shf.l.wrap.b32 %r833, %r834, %r835, %r836;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r829, %r835, %r834, %r836;
	// end inline asm
	st.local.v2.u32 	[%rd22], {%r829, %r833};
	mov.u32 	%r844, 28;
	// begin inline asm
	shf.l.wrap.b32 %r841, %r842, %r843, %r844;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r837, %r843, %r842, %r844;
	// end inline asm
	st.local.v2.u32 	[%rd62], {%r837, %r841};
	mov.u32 	%r852, 21;
	// begin inline asm
	shf.l.wrap.b32 %r849, %r850, %r851, %r852;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r845, %r851, %r850, %r852;
	// end inline asm
	st.local.v2.u32 	[%rd76], {%r845, %r849};
	mov.u32 	%r860, 15;
	// begin inline asm
	shf.l.wrap.b32 %r857, %r858, %r859, %r860;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r853, %r859, %r858, %r860;
	// end inline asm
	st.local.v2.u32 	[%rd25], {%r853, %r857};
	mov.u32 	%r868, 10;
	// begin inline asm
	shf.l.wrap.b32 %r865, %r866, %r867, %r868;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r861, %r867, %r866, %r868;
	// end inline asm
	st.local.v2.u32 	[%rd74], {%r861, %r865};
	mov.u32 	%r876, 6;
	// begin inline asm
	shf.l.wrap.b32 %r873, %r874, %r875, %r876;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r869, %r875, %r874, %r876;
	// end inline asm
	st.local.v2.u32 	[%rd68], {%r869, %r873};
	mov.u32 	%r884, 3;
	// begin inline asm
	shf.l.wrap.b32 %r881, %r882, %r883, %r884;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r877, %r883, %r882, %r884;
	// end inline asm
	st.local.v2.u32 	[%rd72], {%r877, %r881};
	// begin inline asm
	shf.l.wrap.b32 %r889, %r890, %r891, %r892;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r885, %r891, %r890, %r892;
	// end inline asm
	st.local.v2.u32 	[%rd13], {%r885, %r889};
	ld.local.v4.u32 	{%r1107, %r1108, %r1109, %r1110}, [%rd39];
	// begin inline asm
	// chi
	lop3.b32 %r893, %r1107, %r1109, %r749, 0xD2;
	lop3.b32 %r894, %r1108, %r1110, %r753, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd39], {%r893, %r894};
	// begin inline asm
	// chi
	lop3.b32 %r2382, %r701, %r749, %r845, 0xD2;
	lop3.b32 %r2383, %r705, %r753, %r849, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd66], {%r2382, %r2383};
	ld.local.v4.u32 	{%r1111, %r1112, %r1113, %r1114}, [%rd4];
	// begin inline asm
	// chi
	lop3.b32 %r2380, %r1111, %r1113, %r797, 0xD2;
	lop3.b32 %r2381, %r1112, %r1114, %r801, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r2380, %r2381};
	// begin inline asm
	// chi
	lop3.b32 %r2372, %r845, %r797, %r1107, 0xD2;
	lop3.b32 %r2373, %r849, %r801, %r1108, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd76], {%r2372, %r2373};
	// begin inline asm
	// chi
	lop3.b32 %r2376, %r797, %r1107, %r1109, 0xD2;
	lop3.b32 %r2377, %r801, %r1108, %r1110, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r2376, %r2377};
	ld.local.v4.u32 	{%r1115, %r1116, %r1117, %r1118}, [%rd8];
	// begin inline asm
	// chi
	lop3.b32 %r2384, %r837, %r1115, %r1117, 0xD2;
	lop3.b32 %r2385, %r841, %r1116, %r1118, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd62], {%r2384, %r2385};
	// begin inline asm
	// chi
	lop3.b32 %r2374, %r1115, %r1117, %r821, 0xD2;
	lop3.b32 %r2375, %r1116, %r1118, %r825, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r2374, %r2375};
	// begin inline asm
	// chi
	lop3.b32 %r2378, %r877, %r821, %r717, 0xD2;
	lop3.b32 %r2379, %r881, %r825, %r721, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd72], {%r2378, %r2379};
	ld.local.v4.u32 	{%r1119, %r1120, %r1121, %r1122}, [%rd34];
	// begin inline asm
	// chi
	lop3.b32 %r2400, %r1119, %r1121, %r837, 0xD2;
	lop3.b32 %r2401, %r1120, %r1122, %r841, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r2400, %r2401};
	// begin inline asm
	// chi
	lop3.b32 %r2392, %r717, %r837, %r1115, 0xD2;
	lop3.b32 %r2393, %r721, %r841, %r1116, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd82], {%r2392, %r2393};
	ld.local.v4.u32 	{%r1123, %r1124, %r1125, %r1126}, [%rd13];
	// begin inline asm
	// chi
	lop3.b32 %r2418, %r1123, %r1125, %r757, 0xD2;
	lop3.b32 %r2419, %r1124, %r1126, %r761, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd13], {%r2418, %r2419};
	ld.local.v4.u32 	{%r1127, %r1128, %r1129, %r1130}, [%rd16];
	// begin inline asm
	// chi
	lop3.b32 %r2412, %r869, %r1127, %r1129, 0xD2;
	lop3.b32 %r2413, %r873, %r1128, %r1130, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd68], {%r2412, %r2413};
	// begin inline asm
	// chi
	lop3.b32 %r2406, %r1127, %r1129, %r733, 0xD2;
	lop3.b32 %r2407, %r1128, %r1130, %r737, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd16], {%r2406, %r2407};
	// begin inline asm
	// chi
	lop3.b32 %r2398, %r765, %r733, %r1123, 0xD2;
	lop3.b32 %r2399, %r769, %r737, %r1124, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd78], {%r2398, %r2399};
	// begin inline asm
	// chi
	lop3.b32 %r2390, %r733, %r1123, %r1125, 0xD2;
	lop3.b32 %r2391, %r737, %r1124, %r1126, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd19], {%r2390, %r2391};
	ld.local.v4.u32 	{%r1131, %r1132, %r1133, %r1134}, [%rd22];
	// begin inline asm
	// chi
	lop3.b32 %r2416, %r789, %r1131, %r1133, 0xD2;
	lop3.b32 %r2417, %r793, %r1132, %r1134, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd64], {%r2416, %r2417};
	// begin inline asm
	// chi
	lop3.b32 %r2410, %r1131, %r1133, %r853, 0xD2;
	lop3.b32 %r2411, %r1132, %r1134, %r857, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd22], {%r2410, %r2411};
	// begin inline asm
	// chi
	lop3.b32 %r2404, %r861, %r853, %r773, 0xD2;
	lop3.b32 %r2405, %r865, %r857, %r777, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd74], {%r2404, %r2405};
	ld.local.v4.u32 	{%r1135, %r1136, %r1137, %r1138}, [%rd25];
	// begin inline asm
	// chi
	lop3.b32 %r2396, %r1135, %r1137, %r789, 0xD2;
	lop3.b32 %r2397, %r1136, %r1138, %r793, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd25], {%r2396, %r2397};
	// begin inline asm
	// chi
	lop3.b32 %r2388, %r773, %r789, %r1131, 0xD2;
	lop3.b32 %r2389, %r777, %r793, %r1132, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd84], {%r2388, %r2389};
	ld.local.v4.u32 	{%r1139, %r1140, %r1141, %r1142}, [%rd28];
	// begin inline asm
	// chi
	lop3.b32 %r2414, %r1139, %r1141, %r725, 0xD2;
	lop3.b32 %r2415, %r1140, %r1142, %r729, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd28], {%r2414, %r2415};
	// begin inline asm
	// chi
	lop3.b32 %r2408, %r813, %r725, %r781, 0xD2;
	lop3.b32 %r2409, %r817, %r729, %r785, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd70], {%r2408, %r2409};
	ld.local.v4.u32 	{%r1143, %r1144, %r1145, %r1146}, [%rd31];
	// begin inline asm
	// chi
	lop3.b32 %r2402, %r1143, %r1145, %r805, 0xD2;
	lop3.b32 %r2403, %r1144, %r1146, %r809, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd31], {%r2402, %r2403};
	// begin inline asm
	// chi
	lop3.b32 %r2394, %r781, %r805, %r1139, 0xD2;
	lop3.b32 %r2395, %r785, %r809, %r1140, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd80], {%r2394, %r2395};
	// begin inline asm
	// chi
	lop3.b32 %r2386, %r805, %r1139, %r1141, 0xD2;
	lop3.b32 %r2387, %r809, %r1140, %r1142, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd32], {%r2386, %r2387};
	mul.wide.u32 	%rd85, %r2422, 8;
	mov.u64 	%rd86, keccak_round_constants;
	cvta.const.u64 	%rd87, %rd86;
	add.s64 	%rd61, %rd87, %rd85;
	// begin inline asm
	ld.global.nc.v2.u32 {%r1093,%r1094}, [%rd61];
	// end inline asm
	xor.b32  	%r2421, %r894, %r1094;
	xor.b32  	%r2420, %r893, %r1093;
	st.local.v2.u32 	[%rd39], {%r2420, %r2421};
	add.s32 	%r2422, %r2422, 1;

LBB1_2:
	setp.eq.s32 	%p18, %r2422, 23;
	@%p18 bra 	LBB1_4;
	bra.uni 	LBB1_3;

LBB1_4:
	mov.u32 	%r2371, %tid.x;
	mov.u32 	%r2626, 1;
	mov.u32 	%r1385, 0;
	// begin inline asm
	// xor5
	lop3.b32 %r1147, %r2420, %r2384, %r2418, 0x96;
	lop3.b32 %r1147, %r1147, %r2416, %r2414, 0x96;
	lop3.b32 %r1148, %r2421, %r2385, %r2419, 0x96;
	lop3.b32 %r1148, %r1148, %r2417, %r2415, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1159, %r2382, %r2374, %r2412, 0x96;
	lop3.b32 %r1159, %r1159, %r2410, %r2408, 0x96;
	lop3.b32 %r1160, %r2383, %r2375, %r2413, 0x96;
	lop3.b32 %r1160, %r1160, %r2411, %r2409, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1171, %r2380, %r2378, %r2406, 0x96;
	lop3.b32 %r1171, %r1171, %r2404, %r2402, 0x96;
	lop3.b32 %r1172, %r2381, %r2379, %r2407, 0x96;
	lop3.b32 %r1172, %r1172, %r2405, %r2403, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1183, %r2372, %r2400, %r2398, 0x96;
	lop3.b32 %r1183, %r1183, %r2396, %r2394, 0x96;
	lop3.b32 %r1184, %r2373, %r2401, %r2399, 0x96;
	lop3.b32 %r1184, %r1184, %r2397, %r2395, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1195, %r2376, %r2392, %r2390, 0x96;
	lop3.b32 %r1195, %r1195, %r2388, %r2386, 0x96;
	lop3.b32 %r1196, %r2377, %r2393, %r2391, 0x96;
	lop3.b32 %r1196, %r1196, %r2389, %r2387, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1207, %r1160, %r1159, %r2626;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1211, %r1159, %r1160, %r2626;
	// end inline asm
	xor.b32  	%r1386, %r1195, %r1207;
	xor.b32  	%r1387, %r1211, %r1196;
	xor.b32  	%r1388, %r2421, %r1387;
	xor.b32  	%r1389, %r2420, %r1386;
	xor.b32  	%r1317, %r2419, %r1387;
	xor.b32  	%r1316, %r2418, %r1386;
	st.local.v2.u32 	[%rd39], {%r1389, %r1388};
	st.local.v2.u32 	[%rd13], {%r1316, %r1317};
	// begin inline asm
	shf.l.wrap.b32 %r1215, %r1172, %r1171, %r2626;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1219, %r1171, %r1172, %r2626;
	// end inline asm
	xor.b32  	%r1390, %r1215, %r1147;
	xor.b32  	%r1391, %r1219, %r1148;
	xor.b32  	%r1252, %r2375, %r1391;
	xor.b32  	%r1253, %r2374, %r1390;
	st.local.v2.u32 	[%rd8], {%r1253, %r1252};
	xor.b32  	%r1292, %r2411, %r1391;
	xor.b32  	%r1293, %r2410, %r1390;
	st.local.v2.u32 	[%rd22], {%r1293, %r1292};
	// begin inline asm
	shf.l.wrap.b32 %r1223, %r1184, %r1183, %r2626;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1227, %r1183, %r1184, %r2626;
	// end inline asm
	xor.b32  	%r1392, %r1223, %r1159;
	xor.b32  	%r1393, %r1227, %r1160;
	xor.b32  	%r1276, %r2407, %r1393;
	xor.b32  	%r1277, %r2406, %r1392;
	st.local.v2.u32 	[%rd16], {%r1277, %r1276};
	xor.b32  	%r1268, %r2403, %r1393;
	xor.b32  	%r1269, %r2402, %r1392;
	st.local.v2.u32 	[%rd31], {%r1269, %r1268};
	// begin inline asm
	shf.l.wrap.b32 %r1231, %r1196, %r1195, %r2626;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1235, %r1195, %r1196, %r2626;
	// end inline asm
	xor.b32  	%r1394, %r1231, %r1171;
	xor.b32  	%r1395, %r1235, %r1172;
	xor.b32  	%r1301, %r2373, %r1395;
	xor.b32  	%r1300, %r2372, %r1394;
	cvta.to.local.u64 	%rd45, %rd38;
	st.local.v2.u32 	[%rd45], {%r1300, %r1301};
	xor.b32  	%r1309, %r2397, %r1395;
	xor.b32  	%r1308, %r2396, %r1394;
	st.local.v2.u32 	[%rd25], {%r1308, %r1309};
	// begin inline asm
	shf.l.wrap.b32 %r1239, %r1148, %r1147, %r2626;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1243, %r1147, %r1148, %r2626;
	// end inline asm
	xor.b32  	%r1396, %r1239, %r1183;
	xor.b32  	%r1397, %r1243, %r1184;
	xor.b32  	%r1261, %r2393, %r1397;
	xor.b32  	%r1260, %r2392, %r1396;
	cvta.to.local.u64 	%rd47, %rd10;
	st.local.v2.u32 	[%rd47], {%r1260, %r1261};
	xor.b32  	%r1285, %r2387, %r1397;
	xor.b32  	%r1284, %r2386, %r1396;
	st.local.v2.u32 	[%rd32], {%r1284, %r1285};
	mov.u32 	%r1254, 44;
	// begin inline asm
	shf.l.wrap.b32 %r1251, %r1252, %r1253, %r1254;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1247, %r1253, %r1252, %r1254;
	// end inline asm
	cvta.to.local.u64 	%rd48, %rd36;
	st.local.v2.u32 	[%rd48], {%r1247, %r1251};
	mov.u32 	%r1262, 20;
	// begin inline asm
	shf.l.wrap.b32 %r1259, %r1260, %r1261, %r1262;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1255, %r1261, %r1260, %r1262;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r1255, %r1259};
	mov.u32 	%r1270, 61;
	// begin inline asm
	shf.l.wrap.b32 %r1267, %r1268, %r1269, %r1270;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1263, %r1269, %r1268, %r1270;
	// end inline asm
	st.local.v2.u32 	[%rd47], {%r1263, %r1267};
	mov.u32 	%r1278, 43;
	// begin inline asm
	shf.l.wrap.b32 %r1275, %r1276, %r1277, %r1278;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1271, %r1277, %r1276, %r1278;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r1271, %r1275};
	mov.u32 	%r1286, 14;
	// begin inline asm
	shf.l.wrap.b32 %r1283, %r1284, %r1285, %r1286;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1279, %r1285, %r1284, %r1286;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r1279, %r1283};
	mov.u32 	%r1294, 45;
	// begin inline asm
	shf.l.wrap.b32 %r1291, %r1292, %r1293, %r1294;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1287, %r1293, %r1292, %r1294;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r1287, %r1291};
	mov.u32 	%r1302, 28;
	// begin inline asm
	shf.l.wrap.b32 %r1299, %r1300, %r1301, %r1302;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1295, %r1301, %r1300, %r1302;
	// end inline asm
	cvta.to.local.u64 	%rd52, %rd35;
	st.local.v2.u32 	[%rd52], {%r1295, %r1299};
	mov.u32 	%r1310, 21;
	// begin inline asm
	shf.l.wrap.b32 %r1307, %r1308, %r1309, %r1310;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1303, %r1309, %r1308, %r1310;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r1303, %r1307};
	mov.u32 	%r1318, 3;
	// begin inline asm
	shf.l.wrap.b32 %r1315, %r1316, %r1317, %r1318;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1311, %r1317, %r1316, %r1318;
	// end inline asm
	cvta.to.local.u64 	%rd53, %rd37;
	st.local.v2.u32 	[%rd53], {%r1311, %r1315};
	ld.local.v4.u32 	{%r1398, %r1399, %r1400, %r1401}, [%rd39];
	// begin inline asm
	// chi
	lop3.b32 %r1319, %r1398, %r1400, %r1271, 0xD2;
	lop3.b32 %r1320, %r1399, %r1401, %r1275, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd39], {%r1319, %r1320};
	// begin inline asm
	// chi
	lop3.b32 %r2534, %r1247, %r1271, %r1303, 0xD2;
	lop3.b32 %r2535, %r1251, %r1275, %r1307, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd48], {%r2534, %r2535};
	mov.b64 	%rd89, {%r1271, %r1275};
	shr.u64 	%rd90, %rd89, 32;
	cvt.u32.u64 	%r1340, %rd90;
	mov.b64 	%rd91, {%r1303, %r1307};
	shr.u64 	%rd92, %rd91, 32;
	cvt.u32.u64 	%r1348, %rd92;
	// begin inline asm
	// chi
	lop3.b32 %r2550, %r1271, %r1303, %r1279, 0xD2;
	lop3.b32 %r2551, %r1340, %r1348, %r1283, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r2550, %r2551};
	mov.b64 	%rd93, {%r1279, %r1283};
	shr.u64 	%rd94, %rd93, 32;
	cvt.u32.u64 	%r1356, %rd94;
	// begin inline asm
	// chi
	lop3.b32 %r2548, %r1303, %r1279, %r1398, 0xD2;
	lop3.b32 %r2549, %r1348, %r1356, %r1399, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r2548, %r2549};
	// begin inline asm
	// chi
	lop3.b32 %r2558, %r1279, %r1398, %r1400, 0xD2;
	lop3.b32 %r2559, %r1356, %r1399, %r1401, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r2558, %r2559};
	ld.local.v4.u32 	{%r1402, %r1403, %r1404, %r1405}, [%rd8];
	// begin inline asm
	// chi
	lop3.b32 %r2560, %r1295, %r1402, %r1404, 0xD2;
	lop3.b32 %r2561, %r1299, %r1403, %r1405, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd52], {%r2560, %r2561};
	// begin inline asm
	// chi
	lop3.b32 %r2574, %r1402, %r1404, %r1287, 0xD2;
	lop3.b32 %r2575, %r1403, %r1405, %r1291, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r2574, %r2575};
	// begin inline asm
	// chi
	lop3.b32 %r2572, %r1311, %r1287, %r1263, 0xD2;
	lop3.b32 %r2573, %r1315, %r1291, %r1267, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd53], {%r2572, %r2573};
	mov.u64 	%rd95, keccak_round_constants;
	add.s64 	%rd96, %rd95, 184;
	cvta.const.u64 	%rd88, %rd96;
	// begin inline asm
	ld.global.nc.v2.u32 {%r1383,%r1384}, [%rd88];
	// end inline asm
	xor.b32  	%r2537, %r1320, %r1384;
	xor.b32  	%r2536, %r1319, %r1383;
	st.local.v2.u32 	[%rd39], {%r2536, %r2537};
	and.b32  	%r1407, %r2371, 3;
	neg.s32 	%r167, %r1407;
	mov.u32 	%r2473, %r1385;

LBB1_5:
	ld.const.u32 	%r2362, [d_light_size];
	xor.b32  	%r1412, %r2473, %r1;
	mul.lo.s32 	%r1413, %r1412, 16777619;
	shl.b32 	%r1414, %r2473, 2;
	cvt.u64.u32 	%rd97, %r1414;
	and.b64  	%rd98, %rd97, 60;
	add.s64 	%rd99, %rd39, %rd98;
	ld.local.u32 	%r1415, [%rd99];
	xor.b32  	%r1416, %r1415, %r1413;
	rem.u32 	%r220, %r1416, %r2362;
	mov.u32 	%r2474, %r167;
	mov.u32 	%r2525, %r1385;

LBB1_6:
	mov.u32 	%r2369, %tid.x;
	mov.u32 	%r1418, 7199;
	mov.u32 	%r1419, -1;
	shfl.sync.idx.b32 	%r1420|%p19, %r220, %r2525, %r1418, %r1419;
	mul.wide.u32 	%rd100, %r1420, 64;
	add.s64 	%rd101, %rd1, %rd100;
	shl.b32 	%r1422, %r2369, 4;
	cvt.u64.u32 	%rd102, %r1422;
	and.b64  	%rd103, %rd102, 48;
	add.s64 	%rd104, %rd101, %rd103;
	ld.global.v4.u32 	{%r1423, %r1424, %r1425, %r1426}, [%rd104];
	shfl.sync.idx.b32 	%r277|%p1, %r1423, %r1385, %r1418, %r1419;
	shfl.sync.idx.b32 	%r278|%p2, %r1424, %r1385, %r1418, %r1419;
	shfl.sync.idx.b32 	%r279|%p3, %r1425, %r1385, %r1418, %r1419;
	shfl.sync.idx.b32 	%r280|%p4, %r1426, %r1385, %r1418, %r1419;
	setp.ne.s32 	%p20, %r2474, 0;
	@%p20 bra 	LBB1_8;

	ld.local.v4.u32 	{%r1427, %r1428, %r1429, %r1430}, [%rd39];
	mul.lo.s32 	%r1435, %r1427, 16777619;
	mul.lo.s32 	%r1436, %r1428, 16777619;
	mul.lo.s32 	%r1437, %r1429, 16777619;
	mul.lo.s32 	%r1438, %r1430, 16777619;
	xor.b32  	%r2537, %r1436, %r278;
	xor.b32  	%r2536, %r1435, %r277;
	xor.b32  	%r2535, %r1438, %r280;
	xor.b32  	%r2534, %r1437, %r279;
	st.local.v4.u32 	[%rd39], {%r2536, %r2537, %r2534, %r2535};

LBB1_8:
	mov.u32 	%r2364, 7199;
	mov.u32 	%r2363, -1;
	shfl.sync.idx.b32 	%r297|%p5, %r1423, %r2626, %r2364, %r2363;
	shfl.sync.idx.b32 	%r298|%p6, %r1424, %r2626, %r2364, %r2363;
	shfl.sync.idx.b32 	%r299|%p7, %r1425, %r2626, %r2364, %r2363;
	shfl.sync.idx.b32 	%r300|%p8, %r1426, %r2626, %r2364, %r2363;
	@%p20 bra 	LBB1_10;

	ld.local.v4.u32 	{%r1442, %r1443, %r1444, %r1445}, [%rd4];
	mul.lo.s32 	%r1450, %r1442, 16777619;
	mul.lo.s32 	%r1451, %r1443, 16777619;
	mul.lo.s32 	%r1452, %r1444, 16777619;
	mul.lo.s32 	%r1453, %r1445, 16777619;
	xor.b32  	%r2551, %r1451, %r298;
	xor.b32  	%r2550, %r1450, %r297;
	xor.b32  	%r2549, %r1453, %r300;
	xor.b32  	%r2548, %r1452, %r299;
	st.local.v4.u32 	[%rd4], {%r2550, %r2551, %r2548, %r2549};

LBB1_10:
	mov.u32 	%r2366, 7199;
	mov.u32 	%r2365, -1;
	mov.u32 	%r1455, 2;
	shfl.sync.idx.b32 	%r319|%p9, %r1423, %r1455, %r2366, %r2365;
	shfl.sync.idx.b32 	%r320|%p10, %r1424, %r1455, %r2366, %r2365;
	shfl.sync.idx.b32 	%r321|%p11, %r1425, %r1455, %r2366, %r2365;
	shfl.sync.idx.b32 	%r322|%p12, %r1426, %r1455, %r2366, %r2365;
	@%p20 bra 	LBB1_12;

	ld.local.v4.u32 	{%r1457, %r1458, %r1459, %r1460}, [%rd6];
	mul.lo.s32 	%r1465, %r1457, 16777619;
	mul.lo.s32 	%r1466, %r1458, 16777619;
	mul.lo.s32 	%r1467, %r1459, 16777619;
	mul.lo.s32 	%r1468, %r1460, 16777619;
	xor.b32  	%r2561, %r1468, %r322;
	xor.b32  	%r2560, %r1467, %r321;
	xor.b32  	%r2559, %r1466, %r320;
	xor.b32  	%r2558, %r1465, %r319;
	st.local.v4.u32 	[%rd6], {%r2558, %r2559, %r2560, %r2561};

LBB1_12:
	mov.u32 	%r2368, 7199;
	mov.u32 	%r2367, -1;
	shfl.sync.idx.b32 	%r337|%p13, %r1423, %r1318, %r2368, %r2367;
	shfl.sync.idx.b32 	%r338|%p14, %r1424, %r1318, %r2368, %r2367;
	shfl.sync.idx.b32 	%r339|%p15, %r1425, %r1318, %r2368, %r2367;
	shfl.sync.idx.b32 	%r340|%p16, %r1426, %r1318, %r2368, %r2367;
	@%p20 bra 	LBB1_14;

	ld.local.v4.u32 	{%r1472, %r1473, %r1474, %r1475}, [%rd8];
	mul.lo.s32 	%r1480, %r1472, 16777619;
	mul.lo.s32 	%r1481, %r1473, 16777619;
	mul.lo.s32 	%r1482, %r1474, 16777619;
	mul.lo.s32 	%r1483, %r1475, 16777619;
	xor.b32  	%r2575, %r1481, %r338;
	xor.b32  	%r2574, %r1480, %r337;
	xor.b32  	%r2573, %r1483, %r340;
	xor.b32  	%r2572, %r1482, %r339;
	st.local.v4.u32 	[%rd8], {%r2574, %r2575, %r2572, %r2573};

LBB1_14:
	add.s32 	%r2474, %r2474, 1;
	add.s32 	%r2525, %r2525, 1;
	setp.ne.s32 	%p24, %r2525, 4;
	@%p24 bra 	LBB1_6;

	add.s32 	%r2473, %r2473, 1;
	setp.ne.s32 	%p25, %r2473, 256;
	@%p25 bra 	LBB1_5;

	mov.u64 	%rd130, keccak_round_constants;
	mov.u32 	%r2610, 0;
	st.local.v4.u32 	[%rd13], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd16], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd19], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd22], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd25], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd28], {%r2610, %r2610, %r2610, %r2610};
	st.local.v4.u32 	[%rd31], {%r2610, %r2610, %r2610, %r2610};
	st.local.v2.u32 	[%rd32], {%r2610, %r2610};
	mov.u32 	%r2627, -2147483648;
	st.local.v4.u32 	[%rd34], {%r2626, %r2627, %r2610, %r2610};
	cvta.const.u64 	%rd153, %rd130;
	mov.u32 	%r2611, %r2610;
	mov.u32 	%r2612, %r2610;
	mov.u32 	%r2613, %r2610;
	mov.u32 	%r2614, %r2610;
	mov.u32 	%r2615, %r2610;
	mov.u32 	%r2616, %r2610;
	mov.u32 	%r2617, %r2610;
	mov.u32 	%r2620, %r2610;
	mov.u32 	%r2621, %r2610;
	mov.u32 	%r2622, %r2610;
	mov.u32 	%r2623, %r2610;
	mov.u32 	%r2624, %r2610;
	mov.u32 	%r2625, %r2610;
	mov.u32 	%r2630, %r2610;
	mov.u32 	%r2631, %r2610;
	mov.u32 	%r2632, %r2610;
	mov.u32 	%r2633, %r2610;
	mov.u32 	%r2634, %r2610;
	mov.u32 	%r2635, %r2610;
	mov.u32 	%r2640, %r2610;
	mov.u32 	%r2641, %r2610;
	mov.u32 	%r2642, %r2610;
	mov.u32 	%r2643, %r2610;
	mov.u32 	%r2644, %r2610;
	mov.u32 	%r2645, %r2610;
	mov.u32 	%r2650, %r2610;
	mov.u32 	%r2651, %r2610;
	mov.u32 	%r2652, %r2610;
	mov.u32 	%r2653, %r2610;
	mov.u32 	%r2654, %r2610;
	mov.u32 	%r2655, %r2610;
	mov.u32 	%r2660, %r2610;
	bra.uni 	LBB1_17;

LBB1_18:
	mov.u32 	%r2370, 2;
	add.u64 	%rd139, %SP, 0;
	add.s64 	%rd138, %rd139, 120;
	add.u64 	%rd137, %SP, 0;
	add.s64 	%rd136, %rd137, 152;
	add.s64 	%rd135, %rd137, 184;
	add.s64 	%rd134, %rd137, 104;
	add.s64 	%rd133, %rd137, 136;
	add.s64 	%rd132, %rd137, 168;
	add.s64 	%rd131, %rd137, 88;
	// begin inline asm
	// xor5
	lop3.b32 %r1519, %r2536, %r2560, %r2654, 0x96;
	lop3.b32 %r1519, %r1519, %r2652, %r2650, 0x96;
	lop3.b32 %r1520, %r2537, %r2561, %r2655, 0x96;
	lop3.b32 %r1520, %r1520, %r2653, %r2651, 0x96;
	// end inline asm
	mov.u32 	%r1810, 1;
	// begin inline asm
	// xor5
	lop3.b32 %r1531, %r2534, %r2574, %r2644, 0x96;
	lop3.b32 %r1531, %r1531, %r2642, %r2640, 0x96;
	lop3.b32 %r1532, %r2535, %r2575, %r2645, 0x96;
	lop3.b32 %r1532, %r1532, %r2643, %r2641, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1543, %r2550, %r2572, %r2634, 0x96;
	lop3.b32 %r1543, %r1543, %r2632, %r2630, 0x96;
	lop3.b32 %r1544, %r2551, %r2573, %r2635, 0x96;
	lop3.b32 %r1544, %r1544, %r2633, %r2631, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1555, %r2548, %r2626, %r2624, 0x96;
	lop3.b32 %r1555, %r1555, %r2622, %r2620, 0x96;
	lop3.b32 %r1556, %r2549, %r2627, %r2625, 0x96;
	lop3.b32 %r1556, %r1556, %r2623, %r2621, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r1567, %r2558, %r2616, %r2614, 0x96;
	lop3.b32 %r1567, %r1567, %r2612, %r2610, 0x96;
	lop3.b32 %r1568, %r2559, %r2617, %r2615, 0x96;
	lop3.b32 %r1568, %r1568, %r2613, %r2611, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1579, %r1532, %r1531, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1583, %r1531, %r1532, %r1810;
	// end inline asm
	xor.b32  	%r2013, %r1567, %r1579;
	xor.b32  	%r2014, %r1583, %r1568;
	xor.b32  	%r2015, %r2537, %r2014;
	xor.b32  	%r2016, %r2536, %r2013;
	xor.b32  	%r1752, %r2561, %r2014;
	xor.b32  	%r1753, %r2560, %r2013;
	st.local.v2.u32 	[%rd39], {%r2016, %r2015};
	st.local.v2.u32 	[%rd52], {%r1753, %r1752};
	xor.b32  	%r1801, %r2655, %r2014;
	xor.b32  	%r1800, %r2654, %r2013;
	st.local.v2.u32 	[%rd13], {%r1800, %r1801};
	xor.b32  	%r1704, %r2653, %r2014;
	xor.b32  	%r1705, %r2652, %r2013;
	cvta.to.local.u64 	%rd108, %rd138;
	st.local.v2.u32 	[%rd108], {%r1705, %r1704};
	xor.b32  	%r1657, %r2651, %r2014;
	xor.b32  	%r1656, %r2650, %r2013;
	st.local.v2.u32 	[%rd28], {%r1656, %r1657};
	// begin inline asm
	shf.l.wrap.b32 %r1587, %r1544, %r1543, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1591, %r1543, %r1544, %r1810;
	// end inline asm
	xor.b32  	%r2017, %r1587, %r1519;
	xor.b32  	%r2018, %r1591, %r1520;
	xor.b32  	%r1809, %r2535, %r2018;
	xor.b32  	%r1808, %r2534, %r2017;
	st.local.v2.u32 	[%rd48], {%r1808, %r1809};
	xor.b32  	%r1624, %r2575, %r2018;
	xor.b32  	%r1625, %r2574, %r2017;
	st.local.v2.u32 	[%rd8], {%r1625, %r1624};
	xor.b32  	%r1785, %r2645, %r2018;
	xor.b32  	%r1784, %r2644, %r2017;
	cvta.to.local.u64 	%rd110, %rd131;
	st.local.v2.u32 	[%rd110], {%r1784, %r1785};
	xor.b32  	%r1744, %r2643, %r2018;
	xor.b32  	%r1745, %r2642, %r2017;
	st.local.v2.u32 	[%rd22], {%r1745, %r1744};
	xor.b32  	%r1729, %r2641, %r2018;
	xor.b32  	%r1728, %r2640, %r2017;
	cvta.to.local.u64 	%rd111, %rd132;
	st.local.v2.u32 	[%rd111], {%r1728, %r1729};
	// begin inline asm
	shf.l.wrap.b32 %r1595, %r1556, %r1555, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1599, %r1555, %r1556, %r1810;
	// end inline asm
	xor.b32  	%r2019, %r1595, %r1531;
	xor.b32  	%r2020, %r1599, %r1532;
	xor.b32  	%r1664, %r2551, %r2020;
	xor.b32  	%r1665, %r2550, %r2019;
	st.local.v2.u32 	[%rd4], {%r1665, %r1664};
	xor.b32  	%r1793, %r2573, %r2020;
	xor.b32  	%r1792, %r2572, %r2019;
	st.local.v2.u32 	[%rd53], {%r1792, %r1793};
	xor.b32  	%r1672, %r2635, %r2020;
	xor.b32  	%r1673, %r2634, %r2019;
	st.local.v2.u32 	[%rd16], {%r1673, %r1672};
	xor.b32  	%r1777, %r2633, %r2020;
	xor.b32  	%r1776, %r2632, %r2019;
	cvta.to.local.u64 	%rd112, %rd133;
	st.local.v2.u32 	[%rd112], {%r1776, %r1777};
	xor.b32  	%r1640, %r2631, %r2020;
	xor.b32  	%r1641, %r2630, %r2019;
	st.local.v2.u32 	[%rd31], {%r1641, %r1640};
	// begin inline asm
	shf.l.wrap.b32 %r1603, %r1568, %r1567, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1607, %r1567, %r1568, %r1810;
	// end inline asm
	xor.b32  	%r2021, %r1603, %r1543;
	xor.b32  	%r2022, %r1607, %r1544;
	xor.b32  	%r1761, %r2549, %r2022;
	xor.b32  	%r1760, %r2548, %r2021;
	st.local.v2.u32 	[%rd45], {%r1760, %r1761};
	xor.b32  	%r1736, %r2627, %r2022;
	xor.b32  	%r1737, %r2626, %r2021;
	st.local.v2.u32 	[%rd34], {%r1737, %r1736};
	xor.b32  	%r1681, %r2625, %r2022;
	xor.b32  	%r1680, %r2624, %r2021;
	cvta.to.local.u64 	%rd113, %rd134;
	st.local.v2.u32 	[%rd113], {%r1680, %r1681};
	xor.b32  	%r1769, %r2623, %r2022;
	xor.b32  	%r1768, %r2622, %r2021;
	st.local.v2.u32 	[%rd25], {%r1768, %r1769};
	xor.b32  	%r1696, %r2621, %r2022;
	xor.b32  	%r1697, %r2620, %r2021;
	cvta.to.local.u64 	%rd114, %rd135;
	st.local.v2.u32 	[%rd114], {%r1697, %r1696};
	// begin inline asm
	shf.l.wrap.b32 %r1611, %r1520, %r1519, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1615, %r1519, %r1520, %r1810;
	// end inline asm
	xor.b32  	%r2023, %r1611, %r1555;
	xor.b32  	%r2024, %r1615, %r1556;
	xor.b32  	%r1713, %r2559, %r2024;
	xor.b32  	%r1712, %r2558, %r2023;
	st.local.v2.u32 	[%rd6], {%r1712, %r1713};
	xor.b32  	%r1633, %r2617, %r2024;
	xor.b32  	%r1632, %r2616, %r2023;
	st.local.v2.u32 	[%rd47], {%r1632, %r1633};
	xor.b32  	%r1648, %r2615, %r2024;
	xor.b32  	%r1649, %r2614, %r2023;
	st.local.v2.u32 	[%rd19], {%r1649, %r1648};
	xor.b32  	%r1689, %r2613, %r2024;
	xor.b32  	%r1688, %r2612, %r2023;
	cvta.to.local.u64 	%rd116, %rd136;
	st.local.v2.u32 	[%rd116], {%r1688, %r1689};
	xor.b32  	%r1721, %r2611, %r2024;
	xor.b32  	%r1720, %r2610, %r2023;
	st.local.v2.u32 	[%rd32], {%r1720, %r1721};
	// begin inline asm
	shf.l.wrap.b32 %r1623, %r1624, %r1625, %r1254;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1619, %r1625, %r1624, %r1254;
	// end inline asm
	st.local.v2.u32 	[%rd48], {%r1619, %r1623};
	// begin inline asm
	shf.l.wrap.b32 %r1631, %r1632, %r1633, %r1262;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1627, %r1633, %r1632, %r1262;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r1627, %r1631};
	// begin inline asm
	shf.l.wrap.b32 %r1639, %r1640, %r1641, %r1270;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1635, %r1641, %r1640, %r1270;
	// end inline asm
	st.local.v2.u32 	[%rd47], {%r1635, %r1639};
	mov.u32 	%r1650, 39;
	// begin inline asm
	shf.l.wrap.b32 %r1647, %r1648, %r1649, %r1650;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1643, %r1649, %r1648, %r1650;
	// end inline asm
	st.local.v2.u32 	[%rd31], {%r1643, %r1647};
	mov.u32 	%r1658, 18;
	// begin inline asm
	shf.l.wrap.b32 %r1655, %r1656, %r1657, %r1658;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1651, %r1657, %r1656, %r1658;
	// end inline asm
	st.local.v2.u32 	[%rd19], {%r1651, %r1655};
	mov.u32 	%r1666, 62;
	// begin inline asm
	shf.l.wrap.b32 %r1663, %r1664, %r1665, %r1666;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1659, %r1665, %r1664, %r1666;
	// end inline asm
	st.local.v2.u32 	[%rd28], {%r1659, %r1663};
	// begin inline asm
	shf.l.wrap.b32 %r1671, %r1672, %r1673, %r1278;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1667, %r1673, %r1672, %r1278;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r1667, %r1671};
	mov.u32 	%r1682, 25;
	// begin inline asm
	shf.l.wrap.b32 %r1679, %r1680, %r1681, %r1682;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1675, %r1681, %r1680, %r1682;
	// end inline asm
	st.local.v2.u32 	[%rd16], {%r1675, %r1679};
	mov.u32 	%r1690, 8;
	// begin inline asm
	shf.l.wrap.b32 %r1687, %r1688, %r1689, %r1690;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1683, %r1689, %r1688, %r1690;
	// end inline asm
	st.local.v2.u32 	[%rd113], {%r1683, %r1687};
	mov.u32 	%r1698, 56;
	// begin inline asm
	shf.l.wrap.b32 %r1695, %r1696, %r1697, %r1698;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1691, %r1697, %r1696, %r1698;
	// end inline asm
	st.local.v2.u32 	[%rd116], {%r1691, %r1695};
	mov.u32 	%r1706, 41;
	// begin inline asm
	shf.l.wrap.b32 %r1703, %r1704, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1699, %r1705, %r1704, %r1706;
	// end inline asm
	st.local.v2.u32 	[%rd114], {%r1699, %r1703};
	mov.u32 	%r1714, 27;
	// begin inline asm
	shf.l.wrap.b32 %r1711, %r1712, %r1713, %r1714;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1707, %r1713, %r1712, %r1714;
	// end inline asm
	st.local.v2.u32 	[%rd108], {%r1707, %r1711};
	// begin inline asm
	shf.l.wrap.b32 %r1719, %r1720, %r1721, %r1286;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1715, %r1721, %r1720, %r1286;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r1715, %r1719};
	// begin inline asm
	shf.l.wrap.b32 %r1727, %r1728, %r1729, %r2370;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1723, %r1729, %r1728, %r2370;
	// end inline asm
	st.local.v2.u32 	[%rd32], {%r1723, %r1727};
	mov.u32 	%r1738, 55;
	// begin inline asm
	shf.l.wrap.b32 %r1735, %r1736, %r1737, %r1738;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1731, %r1737, %r1736, %r1738;
	// end inline asm
	st.local.v2.u32 	[%rd111], {%r1731, %r1735};
	// begin inline asm
	shf.l.wrap.b32 %r1743, %r1744, %r1745, %r1294;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1739, %r1745, %r1744, %r1294;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r1739, %r1743};
	mov.u32 	%r1754, 36;
	// begin inline asm
	shf.l.wrap.b32 %r1751, %r1752, %r1753, %r1754;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1747, %r1753, %r1752, %r1754;
	// end inline asm
	st.local.v2.u32 	[%rd22], {%r1747, %r1751};
	// begin inline asm
	shf.l.wrap.b32 %r1759, %r1760, %r1761, %r1302;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1755, %r1761, %r1760, %r1302;
	// end inline asm
	st.local.v2.u32 	[%rd52], {%r1755, %r1759};
	// begin inline asm
	shf.l.wrap.b32 %r1767, %r1768, %r1769, %r1310;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1763, %r1769, %r1768, %r1310;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r1763, %r1767};
	mov.u32 	%r1778, 15;
	// begin inline asm
	shf.l.wrap.b32 %r1775, %r1776, %r1777, %r1778;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1771, %r1777, %r1776, %r1778;
	// end inline asm
	st.local.v2.u32 	[%rd25], {%r1771, %r1775};
	mov.u32 	%r1786, 10;
	// begin inline asm
	shf.l.wrap.b32 %r1783, %r1784, %r1785, %r1786;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1779, %r1785, %r1784, %r1786;
	// end inline asm
	st.local.v2.u32 	[%rd112], {%r1779, %r1783};
	mov.u32 	%r1794, 6;
	// begin inline asm
	shf.l.wrap.b32 %r1791, %r1792, %r1793, %r1794;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1787, %r1793, %r1792, %r1794;
	// end inline asm
	st.local.v2.u32 	[%rd110], {%r1787, %r1791};
	// begin inline asm
	shf.l.wrap.b32 %r1799, %r1800, %r1801, %r1318;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1795, %r1801, %r1800, %r1318;
	// end inline asm
	st.local.v2.u32 	[%rd53], {%r1795, %r1799};
	// begin inline asm
	shf.l.wrap.b32 %r1807, %r1808, %r1809, %r1810;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r1803, %r1809, %r1808, %r1810;
	// end inline asm
	st.local.v2.u32 	[%rd13], {%r1803, %r1807};
	ld.local.v4.u32 	{%r2025, %r2026, %r2027, %r2028}, [%rd39];
	// begin inline asm
	// chi
	lop3.b32 %r1811, %r2025, %r2027, %r1667, 0xD2;
	lop3.b32 %r1812, %r2026, %r2028, %r1671, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd39], {%r1811, %r1812};
	// begin inline asm
	// chi
	lop3.b32 %r2534, %r1619, %r1667, %r1763, 0xD2;
	lop3.b32 %r2535, %r1623, %r1671, %r1767, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd48], {%r2534, %r2535};
	ld.local.v4.u32 	{%r2029, %r2030, %r2031, %r2032}, [%rd4];
	// begin inline asm
	// chi
	lop3.b32 %r2550, %r2029, %r2031, %r1715, 0xD2;
	lop3.b32 %r2551, %r2030, %r2032, %r1719, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r2550, %r2551};
	// begin inline asm
	// chi
	lop3.b32 %r2548, %r1763, %r1715, %r2025, 0xD2;
	lop3.b32 %r2549, %r1767, %r1719, %r2026, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r2548, %r2549};
	// begin inline asm
	// chi
	lop3.b32 %r2558, %r1715, %r2025, %r2027, 0xD2;
	lop3.b32 %r2559, %r1719, %r2026, %r2028, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r2558, %r2559};
	ld.local.v4.u32 	{%r2033, %r2034, %r2035, %r2036}, [%rd8];
	// begin inline asm
	// chi
	lop3.b32 %r2560, %r1755, %r2033, %r2035, 0xD2;
	lop3.b32 %r2561, %r1759, %r2034, %r2036, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd52], {%r2560, %r2561};
	// begin inline asm
	// chi
	lop3.b32 %r2574, %r2033, %r2035, %r1739, 0xD2;
	lop3.b32 %r2575, %r2034, %r2036, %r1743, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r2574, %r2575};
	// begin inline asm
	// chi
	lop3.b32 %r2572, %r1795, %r1739, %r1635, 0xD2;
	lop3.b32 %r2573, %r1799, %r1743, %r1639, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd53], {%r2572, %r2573};
	ld.local.v4.u32 	{%r2037, %r2038, %r2039, %r2040}, [%rd34];
	// begin inline asm
	// chi
	lop3.b32 %r2626, %r2037, %r2039, %r1755, 0xD2;
	lop3.b32 %r2627, %r2038, %r2040, %r1759, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r2626, %r2627};
	// begin inline asm
	// chi
	lop3.b32 %r2616, %r1635, %r1755, %r2033, 0xD2;
	lop3.b32 %r2617, %r1639, %r1759, %r2034, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd47], {%r2616, %r2617};
	ld.local.v4.u32 	{%r2041, %r2042, %r2043, %r2044}, [%rd13];
	// begin inline asm
	// chi
	lop3.b32 %r2654, %r2041, %r2043, %r1675, 0xD2;
	lop3.b32 %r2655, %r2042, %r2044, %r1679, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd13], {%r2654, %r2655};
	ld.local.v4.u32 	{%r2045, %r2046, %r2047, %r2048}, [%rd16];
	// begin inline asm
	// chi
	lop3.b32 %r2644, %r1787, %r2045, %r2047, 0xD2;
	lop3.b32 %r2645, %r1791, %r2046, %r2048, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd110], {%r2644, %r2645};
	// begin inline asm
	// chi
	lop3.b32 %r2634, %r2045, %r2047, %r1651, 0xD2;
	lop3.b32 %r2635, %r2046, %r2048, %r1655, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd16], {%r2634, %r2635};
	// begin inline asm
	// chi
	lop3.b32 %r2624, %r1683, %r1651, %r2041, 0xD2;
	lop3.b32 %r2625, %r1687, %r1655, %r2042, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd113], {%r2624, %r2625};
	// begin inline asm
	// chi
	lop3.b32 %r2614, %r1651, %r2041, %r2043, 0xD2;
	lop3.b32 %r2615, %r1655, %r2042, %r2044, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd19], {%r2614, %r2615};
	ld.local.v4.u32 	{%r2049, %r2050, %r2051, %r2052}, [%rd22];
	// begin inline asm
	// chi
	lop3.b32 %r2652, %r1707, %r2049, %r2051, 0xD2;
	lop3.b32 %r2653, %r1711, %r2050, %r2052, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd108], {%r2652, %r2653};
	// begin inline asm
	// chi
	lop3.b32 %r2642, %r2049, %r2051, %r1771, 0xD2;
	lop3.b32 %r2643, %r2050, %r2052, %r1775, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd22], {%r2642, %r2643};
	// begin inline asm
	// chi
	lop3.b32 %r2632, %r1779, %r1771, %r1691, 0xD2;
	lop3.b32 %r2633, %r1783, %r1775, %r1695, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd112], {%r2632, %r2633};
	ld.local.v4.u32 	{%r2053, %r2054, %r2055, %r2056}, [%rd25];
	// begin inline asm
	// chi
	lop3.b32 %r2622, %r2053, %r2055, %r1707, 0xD2;
	lop3.b32 %r2623, %r2054, %r2056, %r1711, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd25], {%r2622, %r2623};
	// begin inline asm
	// chi
	lop3.b32 %r2612, %r1691, %r1707, %r2049, 0xD2;
	lop3.b32 %r2613, %r1695, %r1711, %r2050, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd116], {%r2612, %r2613};
	ld.local.v4.u32 	{%r2057, %r2058, %r2059, %r2060}, [%rd28];
	// begin inline asm
	// chi
	lop3.b32 %r2650, %r2057, %r2059, %r1643, 0xD2;
	lop3.b32 %r2651, %r2058, %r2060, %r1647, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd28], {%r2650, %r2651};
	// begin inline asm
	// chi
	lop3.b32 %r2640, %r1731, %r1643, %r1699, 0xD2;
	lop3.b32 %r2641, %r1735, %r1647, %r1703, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd111], {%r2640, %r2641};
	ld.local.v4.u32 	{%r2061, %r2062, %r2063, %r2064}, [%rd31];
	// begin inline asm
	// chi
	lop3.b32 %r2630, %r2061, %r2063, %r1723, 0xD2;
	lop3.b32 %r2631, %r2062, %r2064, %r1727, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd31], {%r2630, %r2631};
	// begin inline asm
	// chi
	lop3.b32 %r2620, %r1699, %r1723, %r2057, 0xD2;
	lop3.b32 %r2621, %r1703, %r1727, %r2058, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd114], {%r2620, %r2621};
	// begin inline asm
	// chi
	lop3.b32 %r2610, %r1723, %r2057, %r2059, 0xD2;
	lop3.b32 %r2611, %r1727, %r2058, %r2060, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd32], {%r2610, %r2611};
	// begin inline asm
	ld.global.nc.v2.u32 {%r2011,%r2012}, [%rd153];
	// end inline asm
	xor.b32  	%r2537, %r1812, %r2012;
	xor.b32  	%r2536, %r1811, %r2011;
	st.local.v2.u32 	[%rd39], {%r2536, %r2537};
	add.s32 	%r2660, %r2660, 1;
	add.s64 	%rd153, %rd153, 8;

LBB1_17:
	setp.eq.s32 	%p26, %r2660, 23;
	@%p26 bra 	LBB1_19;
	bra.uni 	LBB1_18;

LBB1_19:
	mov.u64 	%rd142, keccak_round_constants;
	add.s64 	%rd141, %rd142, 184;
	cvta.const.u64 	%rd140, %rd141;
	// begin inline asm
	// xor5
	lop3.b32 %r2065, %r2536, %r2560, %r2654, 0x96;
	lop3.b32 %r2065, %r2065, %r2652, %r2650, 0x96;
	lop3.b32 %r2066, %r2537, %r2561, %r2655, 0x96;
	lop3.b32 %r2066, %r2066, %r2653, %r2651, 0x96;
	// end inline asm
	mov.u32 	%r2164, 1;
	// begin inline asm
	// xor5
	lop3.b32 %r2077, %r2534, %r2574, %r2644, 0x96;
	lop3.b32 %r2077, %r2077, %r2642, %r2640, 0x96;
	lop3.b32 %r2078, %r2535, %r2575, %r2645, 0x96;
	lop3.b32 %r2078, %r2078, %r2643, %r2641, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2089, %r2550, %r2572, %r2634, 0x96;
	lop3.b32 %r2089, %r2089, %r2632, %r2630, 0x96;
	lop3.b32 %r2090, %r2551, %r2573, %r2635, 0x96;
	lop3.b32 %r2090, %r2090, %r2633, %r2631, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2101, %r2548, %r2626, %r2624, 0x96;
	lop3.b32 %r2101, %r2101, %r2622, %r2620, 0x96;
	lop3.b32 %r2102, %r2549, %r2627, %r2625, 0x96;
	lop3.b32 %r2102, %r2102, %r2623, %r2621, 0x96;
	// end inline asm
	// begin inline asm
	// xor5
	lop3.b32 %r2113, %r2558, %r2616, %r2614, 0x96;
	lop3.b32 %r2113, %r2113, %r2612, %r2610, 0x96;
	lop3.b32 %r2114, %r2559, %r2617, %r2615, 0x96;
	lop3.b32 %r2114, %r2114, %r2613, %r2611, 0x96;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2125, %r2078, %r2077, %r2164;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2129, %r2077, %r2078, %r2164;
	// end inline asm
	xor.b32  	%r2303, %r2113, %r2125;
	xor.b32  	%r2304, %r2129, %r2114;
	xor.b32  	%r2305, %r2537, %r2304;
	xor.b32  	%r2306, %r2536, %r2303;
	xor.b32  	%r2235, %r2655, %r2304;
	xor.b32  	%r2234, %r2654, %r2303;
	st.local.v2.u32 	[%rd39], {%r2306, %r2305};
	st.local.v2.u32 	[%rd13], {%r2234, %r2235};
	// begin inline asm
	shf.l.wrap.b32 %r2133, %r2090, %r2089, %r2164;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2137, %r2089, %r2090, %r2164;
	// end inline asm
	xor.b32  	%r2307, %r2133, %r2065;
	xor.b32  	%r2308, %r2137, %r2066;
	xor.b32  	%r2170, %r2575, %r2308;
	xor.b32  	%r2171, %r2574, %r2307;
	st.local.v2.u32 	[%rd8], {%r2171, %r2170};
	xor.b32  	%r2210, %r2643, %r2308;
	xor.b32  	%r2211, %r2642, %r2307;
	st.local.v2.u32 	[%rd22], {%r2211, %r2210};
	// begin inline asm
	shf.l.wrap.b32 %r2141, %r2102, %r2101, %r2164;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2145, %r2101, %r2102, %r2164;
	// end inline asm
	xor.b32  	%r2309, %r2141, %r2077;
	xor.b32  	%r2310, %r2145, %r2078;
	xor.b32  	%r2194, %r2635, %r2310;
	xor.b32  	%r2195, %r2634, %r2309;
	st.local.v2.u32 	[%rd16], {%r2195, %r2194};
	xor.b32  	%r2186, %r2631, %r2310;
	xor.b32  	%r2187, %r2630, %r2309;
	st.local.v2.u32 	[%rd31], {%r2187, %r2186};
	// begin inline asm
	shf.l.wrap.b32 %r2149, %r2114, %r2113, %r2164;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2153, %r2113, %r2114, %r2164;
	// end inline asm
	xor.b32  	%r2311, %r2149, %r2089;
	xor.b32  	%r2312, %r2153, %r2090;
	xor.b32  	%r2219, %r2549, %r2312;
	xor.b32  	%r2218, %r2548, %r2311;
	st.local.v2.u32 	[%rd45], {%r2218, %r2219};
	xor.b32  	%r2227, %r2623, %r2312;
	xor.b32  	%r2226, %r2622, %r2311;
	st.local.v2.u32 	[%rd25], {%r2226, %r2227};
	// begin inline asm
	shf.l.wrap.b32 %r2157, %r2066, %r2065, %r2164;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2161, %r2065, %r2066, %r2164;
	// end inline asm
	xor.b32  	%r2313, %r2157, %r2101;
	xor.b32  	%r2314, %r2161, %r2102;
	xor.b32  	%r2179, %r2617, %r2314;
	xor.b32  	%r2178, %r2616, %r2313;
	st.local.v2.u32 	[%rd47], {%r2178, %r2179};
	xor.b32  	%r2203, %r2611, %r2314;
	xor.b32  	%r2202, %r2610, %r2313;
	st.local.v2.u32 	[%rd32], {%r2202, %r2203};
	// begin inline asm
	shf.l.wrap.b32 %r2169, %r2170, %r2171, %r1254;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2165, %r2171, %r2170, %r1254;
	// end inline asm
	st.local.v2.u32 	[%rd48], {%r2165, %r2169};
	// begin inline asm
	shf.l.wrap.b32 %r2177, %r2178, %r2179, %r1262;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2173, %r2179, %r2178, %r1262;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r2173, %r2177};
	// begin inline asm
	shf.l.wrap.b32 %r2185, %r2186, %r2187, %r1270;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2181, %r2187, %r2186, %r1270;
	// end inline asm
	st.local.v2.u32 	[%rd47], {%r2181, %r2185};
	// begin inline asm
	shf.l.wrap.b32 %r2193, %r2194, %r2195, %r1278;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2189, %r2195, %r2194, %r1278;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r2189, %r2193};
	// begin inline asm
	shf.l.wrap.b32 %r2201, %r2202, %r2203, %r1286;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2197, %r2203, %r2202, %r1286;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r2197, %r2201};
	// begin inline asm
	shf.l.wrap.b32 %r2209, %r2210, %r2211, %r1294;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2205, %r2211, %r2210, %r1294;
	// end inline asm
	st.local.v2.u32 	[%rd34], {%r2205, %r2209};
	// begin inline asm
	shf.l.wrap.b32 %r2217, %r2218, %r2219, %r1302;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2213, %r2219, %r2218, %r1302;
	// end inline asm
	st.local.v2.u32 	[%rd52], {%r2213, %r2217};
	// begin inline asm
	shf.l.wrap.b32 %r2225, %r2226, %r2227, %r1310;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2221, %r2227, %r2226, %r1310;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r2221, %r2225};
	// begin inline asm
	shf.l.wrap.b32 %r2233, %r2234, %r2235, %r1318;
	// end inline asm
	// begin inline asm
	shf.l.wrap.b32 %r2229, %r2235, %r2234, %r1318;
	// end inline asm
	st.local.v2.u32 	[%rd53], {%r2229, %r2233};
	ld.local.v4.u32 	{%r2315, %r2316, %r2317, %r2318}, [%rd39];
	// begin inline asm
	// chi
	lop3.b32 %r2237, %r2315, %r2317, %r2189, 0xD2;
	lop3.b32 %r2238, %r2316, %r2318, %r2193, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd39], {%r2237, %r2238};
	// begin inline asm
	// chi
	lop3.b32 %r2245, %r2165, %r2189, %r2221, 0xD2;
	lop3.b32 %r2246, %r2169, %r2193, %r2225, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd48], {%r2245, %r2246};
	mov.b64 	%rd118, {%r2189, %r2193};
	shr.u64 	%rd119, %rd118, 32;
	cvt.u32.u64 	%r2258, %rd119;
	mov.b64 	%rd120, {%r2221, %r2225};
	shr.u64 	%rd121, %rd120, 32;
	cvt.u32.u64 	%r2266, %rd121;
	// begin inline asm
	// chi
	lop3.b32 %r2253, %r2189, %r2221, %r2197, 0xD2;
	lop3.b32 %r2254, %r2258, %r2266, %r2201, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd4], {%r2253, %r2254};
	mov.b64 	%rd122, {%r2197, %r2201};
	shr.u64 	%rd123, %rd122, 32;
	cvt.u32.u64 	%r2274, %rd123;
	// begin inline asm
	// chi
	lop3.b32 %r2261, %r2221, %r2197, %r2315, 0xD2;
	lop3.b32 %r2262, %r2266, %r2274, %r2316, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd45], {%r2261, %r2262};
	// begin inline asm
	// chi
	lop3.b32 %r2269, %r2197, %r2315, %r2317, 0xD2;
	lop3.b32 %r2270, %r2274, %r2316, %r2318, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd6], {%r2269, %r2270};
	ld.local.v4.u32 	{%r2319, %r2320, %r2321, %r2322}, [%rd8];
	// begin inline asm
	// chi
	lop3.b32 %r2277, %r2213, %r2319, %r2321, 0xD2;
	lop3.b32 %r2278, %r2217, %r2320, %r2322, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd52], {%r2277, %r2278};
	// begin inline asm
	// chi
	lop3.b32 %r2285, %r2319, %r2321, %r2205, 0xD2;
	lop3.b32 %r2286, %r2320, %r2322, %r2209, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd8], {%r2285, %r2286};
	// begin inline asm
	// chi
	lop3.b32 %r2293, %r2229, %r2205, %r2181, 0xD2;
	lop3.b32 %r2294, %r2233, %r2209, %r2185, 0xD2;
	// end inline asm
	st.local.v2.u32 	[%rd53], {%r2293, %r2294};
	// begin inline asm
	ld.global.nc.v2.u32 {%r2301,%r2302}, [%rd140];
	// end inline asm
	xor.b32  	%r2323, %r2238, %r2302;
	xor.b32  	%r2324, %r2237, %r2301;
	ld.const.u64 	%rd126, [d_dag];
	cvta.to.global.u64 	%rd127, %rd126;
	mul.wide.u32 	%rd128, %r1, 64;
	add.s64 	%rd129, %rd127, %rd128;
	st.local.v2.u32 	[%rd39], {%r2324, %r2323};
	ld.local.v4.u32 	{%r2330, %r2331, %r2332, %r2333}, [%rd39];
	st.global.v4.u32 	[%rd129], {%r2330, %r2331, %r2332, %r2333};
	ld.local.v4.u32 	{%r2338, %r2339, %r2340, %r2341}, [%rd4];
	st.global.v4.u32 	[%rd129+16], {%r2338, %r2339, %r2340, %r2341};
	ld.local.v4.u32 	{%r2346, %r2347, %r2348, %r2349}, [%rd6];
	st.global.v4.u32 	[%rd129+32], {%r2346, %r2347, %r2348, %r2349};
	ld.local.v4.u32 	{%r2354, %r2355, %r2356, %r2357}, [%rd8];
	st.global.v4.u32 	[%rd129+48], {%r2354, %r2355, %r2356, %r2357};

LBB1_20:
	ret;

}

